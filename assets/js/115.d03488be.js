(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{722:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"go-语言简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go-语言简介"}},[t._v("#")]),t._v(" Go 语言简介")]),t._v(" "),s("h2",{attrs:{id:"一、简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[t._v("#")]),t._v(" 一、简介")]),t._v(" "),s("p",[t._v("Go 语言是谷歌 2009 年首次推出并在 2012 年正式发布的一种全新的编程语言，可以在不损失应用程序性能的情况下降低代码的复杂性。谷歌首席软件工程师罗布派克(Rob Pike)说：我们之所以开发 Go，是因为过去 10 多年间软件开发的难度令人沮丧。Google 对 Go 寄予厚望，其设计是让软件充分发挥多核心处理器同步多工的优点，并可解决面向对象程序设计的麻烦。它具有现代的程序语言特色，如垃圾回收，帮助开发者处理琐碎但重要的内存管理问题。Go 的速度也非常快，几乎和 C 或 C++ 程序一样快，且能够快速开发应用程序。")]),t._v(" "),s("p",[t._v("Go 语言起源 2007 年，并于 2009 年正式对外发布。它从 2009 年 9 月 21 日开始作为谷歌公司 20% 兼职项目，即相关员工利用 20% 的空余时间来参与 Go 语言的研发工作。")]),t._v(" "),s("ul",[s("li",[t._v("2007 年 9 月 20 日的下午，在谷歌山景城总部的一间办公室里，谷歌的大佬级程序员 Rob Pike在等待一个 C++ 项目构建的过程中和谷歌的另外两个大佬级程序员 Robert Griesemer和 Ken Thompson进行了一次有关设计一门新编程语言的讨论。\n"),s("ul",[s("li",[t._v("计算机硬件技术更新频繁，性能提高很快。目前主流的编程语言发展明显落后于硬件，不能合理利用多核多CPU的优势提升软件系统性能。")]),t._v(" "),s("li",[t._v("软件系统复杂度越来越高，维护成本越来越高，目前缺乏一个足够简洁高效的编程语言。")]),t._v(" "),s("li",[t._v("企业运行维护很多c/c++的项目，C/C++程序运行速度虽然很快（因为采用静态编译），但是编译速度却很慢，同时还存在内存泄露的一系列困扰需要解决。")])])])]),t._v(" "),s("h3",{attrs:{id:"_1、主要特征"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、主要特征"}},[t._v("#")]),t._v(" 1、主要特征")]),t._v(" "),s("ol",[s("li",[t._v("自动立即回收。")]),t._v(" "),s("li",[t._v("更丰富的内置类型。")]),t._v(" "),s("li",[t._v("函数多返回值。")]),t._v(" "),s("li",[t._v("错误处理。")]),t._v(" "),s("li",[t._v("匿名函数和闭包。")]),t._v(" "),s("li",[t._v("类型和接口。")]),t._v(" "),s("li",[t._v("并发编程。")]),t._v(" "),s("li",[t._v("反射。")]),t._v(" "),s("li",[t._v("语言交互性。")])]),t._v(" "),s("h3",{attrs:{id:"_2、里程碑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、里程碑"}},[t._v("#")]),t._v(" 2、里程碑")]),t._v(" "),s("ul",[s("li",[t._v("2007年，谷歌工程师Ken Thompson、Rob Pike、Robert Griesemer开始设计一门全新的语言，这是Go语言的最初原型。")]),t._v(" "),s("li",[t._v("2009.11.10 ，Google将Go语言以开放源代码的形式向全球发布。")]),t._v(" "),s("li",[t._v("2015年8月19日 ，Go1.5版本发布，本次更新中移除了“最后残余的C代码”，请内存管理方面权威专家Rick Hudson对GC进行重新设计（重要的修正）")]),t._v(" "),s("li",[t._v("2017年2月16日 ， Go1.8版本发布")]),t._v(" "),s("li",[t._v("2017年8月24日 ， Go1.9版本发布")]),t._v(" "),s("li",[t._v("2018年2月16日 ， Go1.10版本发布")]),t._v(" "),s("li",[t._v("2018年8月24日 ， Go1.11版本发布")]),t._v(" "),s("li",[t._v("2019年2月25日 ， Go1.12版本发布")]),t._v(" "),s("li",[t._v("2019年9月03日 ， Go1.13版本发布")]),t._v(" "),s("li",[t._v("2020年2月25日 ， Go1.14版本发布")]),t._v(" "),s("li",[t._v("2020年8月11日 ， Go1.15版本发布")]),t._v(" "),s("li",[t._v("2021年2月16日 ， Go1.16版本发布")]),t._v(" "),s("li",[t._v("2021年8月16日 ， Go1.17版本发布")])]),t._v(" "),s("h3",{attrs:{id:"_3、团队核心成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、团队核心成员"}},[t._v("#")]),t._v(" 3、团队核心成员")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Ken Thompson（肯·汤普逊）")]),t._v(":1983年图灵奖、1998年美国国家技术奖得主，他与Dennis Ritchie是Unix系统的原创者。Thompson也发明了C语言、B语言，同时也是C语言的主要发明人。")]),t._v(" "),s("li",[s("code",[t._v("Rob Pike（罗布·派克）")]),t._v("： 加拿大人，曾是贝尔实验室的Unix团队和Plan 9操作计划的成员。他与Thompson共事多年，并共创出广泛使用的UTF-8字符编码。（ps：Go语言的图标-gopher 囊地鼠，是Rob Pike老婆制作的）")]),t._v(" "),s("li",[s("code",[t._v("Robert Griesemer(罗伯特·格里泽默)")]),t._v("：曾协助制作Java的HotSpot编译器，和Chrom浏览器的JavaScript引擎V8.")])]),t._v(" "),s("h2",{attrs:{id:"二、思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、思想"}},[t._v("#")]),t._v(" 二、思想")]),t._v(" "),s("blockquote",[s("p",[t._v("思想：Less can be more. 大道至简，小而蕴真。")])]),t._v(" "),s("ol",[s("li",[t._v("简洁的语法")]),t._v(" "),s("li",[t._v("自带 GC")]),t._v(" "),s("li",[t._v("静态编译")]),t._v(" "),s("li",[t._v("简单，没有继承、多态、类等")]),t._v(" "),s("li",[t._v("丰富的库和开发文档")]),t._v(" "),s("li",[t._v("语法层支持并发")])]),t._v(" "),s("h3",{attrs:{id:"为什么使用go"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用go"}},[t._v("#")]),t._v(" 为什么使用Go")]),t._v(" "),s("ol",[s("li",[t._v("简单好记的关键词和语法。轻松上手，简单易学。")]),t._v(" "),s("li",[t._v("更高的效率。比Java，C++等拥有更高的编译速度，同时运行效率媲美C，同时开发效率非常高。")]),t._v(" "),s("li",[t._v("生态强大，网络上库很丰富，很多功能使用Go开发非常简单。")]),t._v(" "),s("li",[t._v("语法检查严格，高安全性。")]),t._v(" "),s("li",[t._v("严格的依赖管理，go mod命令。")]),t._v(" "),s("li",[t._v("Go拥有强大的编译检查、严格的编码规范和完整的软件生命周期工具，具有很强的稳定性，稳定压倒一切。")]),t._v(" "),s("li",[t._v("跨平台交叉编译，windows就可以编译出mac，linux上可执行的程序。")]),t._v(" "),s("li",[t._v("异步编程复杂度低，易维护，GO 语言中 Channel 设计，异步程序写起来非常自然。")]),t._v(" "),s("li",[t._v("语言层面支持并发，"),s("code",[t._v("go关键字（协程）")]),t._v("使得go的并发效率极高。")]),t._v(" "),s("li",[t._v("严格的语法规范，所有程序员写出来的代码都是一样的，对大团队来说，非常友好。")]),t._v(" "),s("li",[t._v("Go 的并发、性能、安全性、易于部署等特性，使它很容易成为“云原生语言”。容器和云的使用上非常广")])]),t._v(" "),s("h2",{attrs:{id:"三、命名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、命名"}},[t._v("#")]),t._v(" 三、命名")]),t._v(" "),s("p",[t._v("1.Go 的函数、变量、常量、自定义类型、包"),s("code",[t._v("(package)")]),t._v("的命名方式遵循以下规则：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）首字符可以是任意的Unicode字符或者下划线\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）剩余字符可以是Unicode字符、下划线、数字\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）字符长度不限\n")])])]),s("p",[t._v("2.Go 只有 25 个关键字")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("goto")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("fallthrough")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("\n")])])]),s("p",[t._v("3.Go 还有 37 个保留字")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("Constants"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("iota")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n\nTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int8")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int16")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint8")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint16")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint32")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint64")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uintptr")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float32")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float64")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex128")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex64")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("rune")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\nFunctions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("make")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("cap")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("new")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("append")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("copy")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("close")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("delete")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("complex")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("real")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("imag")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("panic")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("recover")]),t._v("\n")])])]),s("p",[t._v("4.可见性：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）声明在函数内部，是函数的本地值，类似private\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）声明在函数外部，是对当前包可见"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("包内所有"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("文件都可见"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("的全局值，类似protect\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）声明在函数外部且首字母大写是所有包可见的全局值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("类似public\n")])])]),s("h2",{attrs:{id:"四、声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、声明"}},[t._v("#")]),t._v(" 四、声明")]),t._v(" "),s("p",[t._v("有四种主要的声明方式：")]),t._v(" "),s("ul",[s("li",[t._v("var：声明变量")]),t._v(" "),s("li",[t._v("const：声明常量")]),t._v(" "),s("li",[t._v("type：声明类型")]),t._v(" "),s("li",[t._v("func：声明函数")])]),t._v(" "),s("p",[t._v("Go 的程序是保存在多个.go 文件中，文件的第一行就是 package XXX 声明，用来说明该文件属于哪个包(package)，package 声明下来就是 import 声明，再下来是类型，变量，常量，函数的声明。")]),t._v(" "),s("h2",{attrs:{id:"五、命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、命令"}},[t._v("#")]),t._v(" 五、命令")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("go env：用于打印 Go 语言的环境信息。")])]),t._v(" "),s("li",[s("p",[t._v("go run：命令可以编译并运行命令源码文件。")])]),t._v(" "),s("li",[s("p",[t._v("go get：可以根据要求和实际情况从互联网上下载或更新指定的代码包及其依赖包，并对它们进行编译和安装。")])]),t._v(" "),s("li",[s("p",[t._v("go build：命令用于编译我们指定的源码文件或代码包以及它们的依赖包。")])]),t._v(" "),s("li",[s("p",[t._v("go install：用于编译并安装指定的代码包及它们的依赖包。")])]),t._v(" "),s("li",[s("p",[t._v("go clean：命令会删除掉执行其它命令时产生的一些文件和目录。")])]),t._v(" "),s("li",[s("p",[t._v("go doc：命令可以打印附于 Go 语言程序实体上的文档。我们可以通过把程序实体的标识符作为该命令的参数来达到查看其文档的目的。")])]),t._v(" "),s("li",[s("p",[t._v("go test：命令用于对 Go 语言编写的程序进行测试。")])]),t._v(" "),s("li",[s("p",[t._v("go list：命令的作用是列出指定的代码包的信息。")])]),t._v(" "),s("li",[s("p",[t._v("go fix：会把指定代码包的所有 Go 语言源码文件中的旧版本代码修正为新版本的代码。")])]),t._v(" "),s("li",[s("p",[t._v("go vet：是一个用于检查 Go 语言源码中静态错误的简单工具。")])]),t._v(" "),s("li",[s("p",[t._v("go tool pprof：命令来交互式的访问概要文件的内容。")])])]),t._v(" "),s("h2",{attrs:{id:"六、运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、运算符"}},[t._v("#")]),t._v(" 六、运算符")]),t._v(" "),s("p",[t._v("Go 语言内置的运算符有：")]),t._v(" "),s("ul",[s("li",[t._v("算术运算符")]),t._v(" "),s("li",[t._v("关系运算符")]),t._v(" "),s("li",[t._v("逻辑运算符")]),t._v(" "),s("li",[t._v("位运算符")]),t._v(" "),s("li",[t._v("赋值运算符")])]),t._v(" "),s("h3",{attrs:{id:"_1、算数运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、算数运算符"}},[t._v("#")]),t._v(" 1、算数运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("相加")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("相减")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("相乘")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("/")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("相除")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("%")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("求余")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("注意： ++（自增）和--（自减）在 Go 语言中是单独的语句，并不是运算符。")])]),t._v(" "),s("h3",{attrs:{id:"_2、关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、关系运算符"}},[t._v("#")]),t._v(" 2、关系运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("==")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查两个值是否相等，如果相等返回 True 否则返回 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("!=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查两个值是否不相等，如果不相等返回 True 否则返回 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(">")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查左边值是否大于右边值，如果是返回 True 否则返回 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(">=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查左边值是否大于等于右边值，如果是返回 True 否则返回 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("<")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查左边值是否小于右边值，如果是返回 True 否则返回 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("<=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("检查左边值是否小于等于右边值，如果是返回 True 否则返回 False。")])])])]),t._v(" "),s("h3",{attrs:{id:"_3、逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、逻辑运算符"}},[t._v("#")]),t._v(" 3、逻辑运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("&&")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑 AND 运算符。 如果两边的操作数都是 True，则为 True，否则为 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("ll")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑 OR 运算符。 如果两边的操作数有一个 True，则为 True，否则为 False。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("!")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑 NOT 运算符。 如果条件为 True，则为 False，否则为 True。")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-1-4-位运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-4-位运算符"}},[t._v("#")]),t._v(" 1.1.4. 位运算符")]),t._v(" "),s("p",[t._v("位运算符对整数在内存中的二进制位进行操作。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("&")]),t._v(" "),s("td",[t._v("参与运算的两数各对应的二进位相与。（两位均为 1 才为 1）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("l")]),t._v(" "),s("td",[t._v("参与运算的两数各对应的二进位相或。（两位有一个为 1 就为 1）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),s("td",[t._v("参与运算的两数各对应的二进位相异或，当两对应的二进位相异时，结果为 1。（两位不一样则为 1）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("<<")]),t._v(" "),s("td",[t._v("左移 n 位就是乘以 2 的 n 次方。“a<<b”是把 a 的各二进位全部左移 b 位，高位丢弃，低位补 0。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(">>")]),t._v(" "),s("td",[t._v("右移 n 位就是除以 2 的 n 次方。“a>>b”是把 a 的各二进位全部右移 b 位。")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-1-5-赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-5-赋值运算符"}},[t._v("#")]),t._v(" 1.1.5. 赋值运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("=")]),t._v(" "),s("td",[t._v("简单的赋值运算符，将一个表达式的值赋给一个左值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("+=")]),t._v(" "),s("td",[t._v("相加后再赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("-=")]),t._v(" "),s("td",[t._v("相减后再赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("*=")]),t._v(" "),s("td",[t._v("相乘后再赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("/=")]),t._v(" "),s("td",[t._v("相除后再赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("%=")]),t._v(" "),s("td",[t._v("求余后再赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("<<=")]),t._v(" "),s("td",[t._v("左移后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(">>=")]),t._v(" "),s("td",[t._v("右移后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("&=")]),t._v(" "),s("td",[t._v("按位与后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("l=")]),t._v(" "),s("td",[t._v("按位或后赋值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("^=")]),t._v(" "),s("td",[t._v("按位异或后赋值")])])])]),t._v(" "),s("h2",{attrs:{id:"七、下划线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、下划线"}},[t._v("#")]),t._v(" 七、下划线")]),t._v(" "),s("p",[t._v("“_”是特殊标识符，用来忽略结果。")]),t._v(" "),s("h3",{attrs:{id:"_1、下划线在-import-中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、下划线在-import-中"}},[t._v("#")]),t._v(" 1、下划线在 import 中")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在Golang里，import的作用是导入其他package。\n")])])]),s("p",[t._v("import 下划线（如：import hello/imp）的作用：当导入一个包时，该包下的文件里所有 init()函数都会被执行，然而，有些时候我们并不需要把整个包都导入进来，仅仅是是希望它执行 init()函数而已。这个时候就可以使用 import 引用该包。即使用【import _ 包路径】只是引用该包，仅仅是为了调用 init()函数，所以无法通过包名来调用包中的其他函数。 示例：")]),t._v(" "),s("p",[t._v("代码结构")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    src\n    |\n    +--- main.go\n    |\n    +--- hello\n           |\n            +--- hello.go\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./hello"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hello.Print()")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译报错：./main.go:6:5: undefined: hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("hello.go")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" hello\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imp-init() come here."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("输出结果：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("imp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" come here"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-1-2-下划线在代码中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-下划线在代码中"}},[t._v("#")]),t._v(" 1.1.2. 下划线在代码中")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("byte")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/***/Desktop/text.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stdout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("解释 1：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("下划线意思是忽略这个变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n比如os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Open，返回值为"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("File，"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n\n普通写法是f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxxxxx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n如果此时不需要知道返回的错误值\n\n就可以用f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxxxx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n如此则忽略了"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("变量\n")])])]),s("p",[t._v("解释 2：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("占位符，意思是那个位置本应赋给某个值，但是咱们不需要这个值。\n所以就把该值赋给下划线，意思是丢掉不要。\n这样编译器可以更好的优化，任何类型的单个值都可以丢给下划线。\n这种情况是占位用的，方法返回两个结果，而你只想要一个结果。\n那另一个就用 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_"')]),t._v(" 占位，而如果用变量的话，不使用，编译器是会报错的。\n")])])]),s("p",[t._v("补充：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"database/sql"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/go-sql-driver/mysql"')]),t._v("\n")])])]),s("p",[t._v("第二个 import 就是不直接使用 mysql 包，只是执行一下这个包的 init 函数，把 mysql 的驱动注册到 sql 包里，然后程序里就可以使用 sql 包来访问 mysql 数据库了。")]),t._v(" "),s("h2",{attrs:{id:"八、go-项目构建及编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、go-项目构建及编译"}},[t._v("#")]),t._v(" 八、Go 项目构建及编译")]),t._v(" "),s("p",[t._v("一个 Go 工程中主要包含以下三个目录：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("src：源代码文件\npkg：包文件\nbin：相关bin文件\n")])])]),s("ol",[s("li",[s("p",[t._v("建立工程文件夹 goproject")])]),t._v(" "),s("li",[s("p",[t._v("在工程文件夹中建立 src,pkg,bin 文件夹")])]),t._v(" "),s("li",[s("p",[t._v("在 GOPATH 中添加 projiect 路径 例 e:/goproject")])]),t._v(" "),s("li",[s("p",[t._v("如工程中有自己的包 examplepackage，那在 src 文件夹下建立以包名命名的文件夹 例 examplepackage")])]),t._v(" "),s("li",[s("p",[t._v("在 src 文件夹下编写主程序代码代码 goproject.go")])]),t._v(" "),s("li",[s("p",[t._v("在 examplepackage 文件夹中编写 examplepackage.go 和 包测试文件 examplepackage_test.go")])]),t._v(" "),s("li",[s("p",[t._v("编译调试包")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" build examplepackage\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" test examplepackage\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" install examplepackage\n")])])]),s("p",[t._v("这时在 pkg 文件夹中可以发现会有一个相应的操作系统文件夹如 windows_386z, 在这个文件夹中会有 examplepackage 文件夹，在该文件中有 examplepackage.a 文件")])]),t._v(" "),s("li",[s("p",[t._v("编译主程序")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" build goproject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n")])])]),s("p",[t._v("成功后会生成 goproject.exe 文件。")])])]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.topgoer.com/go%E5%9F%BA%E7%A1%80/Go%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%BB%E8%A6%81%E7%89%B9%E5%BE%81.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 语言的主要特征"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.topgoer.com/go%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("运算符"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.topgoer.com/go%E5%9F%BA%E7%A1%80/%E4%B8%8B%E5%88%92%E7%BA%BF.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("下划线"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);