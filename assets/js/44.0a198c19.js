(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{651:function(t,e,o){"use strict";o.r(e);var _=o(6),v=Object(_.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"语言指南-proto3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#语言指南-proto3"}},[t._v("#")]),t._v(" 语言指南 (proto3)")]),t._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#simple",target:"_blank",rel:"noopener noreferrer"}},[t._v("定义消息类型"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#scalar",target:"_blank",rel:"noopener noreferrer"}},[t._v("标量值类型"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#default",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认值"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#enum",target:"_blank",rel:"noopener noreferrer"}},[t._v("枚举"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#other",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用其他消息类型"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#nested",target:"_blank",rel:"noopener noreferrer"}},[t._v("嵌套类型"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#updating",target:"_blank",rel:"noopener noreferrer"}},[t._v("更新消息类型"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#unknowns",target:"_blank",rel:"noopener noreferrer"}},[t._v("未知字段"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#any",target:"_blank",rel:"noopener noreferrer"}},[t._v("任何"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#oneof",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#maps",target:"_blank",rel:"noopener noreferrer"}},[t._v("地图"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#packages",target:"_blank",rel:"noopener noreferrer"}},[t._v("套餐"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#services",target:"_blank",rel:"noopener noreferrer"}},[t._v("定义服务"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#json",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON 映射"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("选项"),o("OutboundLink")],1)]),t._v(" "),o("li",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#generating",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成你的类"),o("OutboundLink")],1)])]),t._v(" "),o("p",[t._v("本指南介绍如何使用协议缓冲区语言来构建协议缓冲区数据，包括"),o("code",[t._v(".proto")]),t._v("文件语法以及如何从"),o("code",[t._v(".proto")]),t._v("文件生成数据访问类。它涵盖了协议缓冲区语言的"),o("strong",[t._v("proto3")]),t._v("版本：有关"),o("strong",[t._v("proto2")]),t._v("语法的信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("Proto2 语言指南"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("p",[t._v("这是一个参考指南——有关使用本文档中描述的许多功能的分步示例，请参阅您选择的语言的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/tutorials",target:"_blank",rel:"noopener noreferrer"}},[t._v("教程"),o("OutboundLink")],1),t._v("（目前仅 proto2；更多 proto3 文档即将推出）。")]),t._v(" "),o("h2",{attrs:{id:"一、定义消息类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一、定义消息类型"}},[t._v("#")]),t._v(" 一、定义消息类型")]),t._v(" "),o("p",[t._v("首先让我们看一个非常简单的例子。假设您要定义一个搜索请求消息格式，其中每个搜索请求都有一个查询字符串、您感兴趣的特定结果页面以及每页的多个结果。这是"),o("code",[t._v(".proto")]),t._v("您用来定义消息类型的文件。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('syntax = "proto3";\n\nmessage SearchRequest {\n  string query = 1;\n  int32 page_number = 2;\n  int32 result_per_page = 3;\n}\n')])])]),o("ul",[o("li",[t._v("该文件的第一行指定您使用的是"),o("code",[t._v("proto3")]),t._v("语法：如果您不这样做，协议缓冲区编译器将假定您使用的是"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("proto2"),o("OutboundLink")],1),t._v("。这必须是文件的第一个非空、非注释行。")]),t._v(" "),o("li",[o("code",[t._v("SearchRequest")]),t._v("消息定义指定了三个字段（名称/值对），每个字段用于您希望包含在此类消息中的每条数据。每个字段都有一个名称和一个类型。")])]),t._v(" "),o("h3",{attrs:{id:"_1、指定字段类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1、指定字段类型"}},[t._v("#")]),t._v(" 1、指定字段类型")]),t._v(" "),o("p",[t._v("在上面的示例中，所有字段都是"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#scalar",target:"_blank",rel:"noopener noreferrer"}},[t._v("标量类型"),o("OutboundLink")],1),t._v("：两个整数（"),o("code",[t._v("page_number")]),t._v("和"),o("code",[t._v("result_per_page")]),t._v("）和一个字符串（"),o("code",[t._v("query")]),t._v("）。但是，您也可以为字段指定复合类型，包括"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#enum",target:"_blank",rel:"noopener noreferrer"}},[t._v("枚举"),o("OutboundLink")],1),t._v("和其他消息类型。")]),t._v(" "),o("h3",{attrs:{id:"_2、分配字段编号"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2、分配字段编号"}},[t._v("#")]),t._v(" 2、分配字段编号")]),t._v(" "),o("p",[t._v("如您所见，消息定义中的每个字段都有一个"),o("strong",[t._v("唯一的编号")]),t._v("。这些字段编号用于在"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("消息二进制格式"),o("OutboundLink")],1),t._v("中标识您的字段，并且在使用您的消息类型后不应更改。"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding#structure",target:"_blank",rel:"noopener noreferrer"}},[t._v("请注意，1 到 15 范围内的字段编号需要一个字节进行编码，包括字段编号和字段类型（您可以在Protocol Buffer Encoding"),o("OutboundLink")],1),t._v("中找到更多相关信息）。16 到 2047 范围内的字段编号占用两个字节。因此，您应该为非常频繁出现的消息元素保留数字 1 到 15。请记住为将来可能添加的频繁出现的元素留出一些空间。")]),t._v(" "),o("p",[t._v("您可以指定的最小字段编号是 1，最大的是 2 29 - 1，即 536,870,911。您也不能使用数字 19000 到 19999 ( "),o("code",[t._v("FieldDescriptor::kFirstReservedNumber")]),t._v("through "),o("code",[t._v("FieldDescriptor::kLastReservedNumber")]),t._v(")，因为它们是为 Protocol Buffers 实现保留的——如果您在"),o("code",[t._v(".proto")]),t._v(". 同样，您不能使用任何以前"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#reserved",target:"_blank",rel:"noopener noreferrer"}},[t._v("保留"),o("OutboundLink")],1),t._v("的字段编号。")]),t._v(" "),o("h3",{attrs:{id:"_3、指定字段规则"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3、指定字段规则"}},[t._v("#")]),t._v(" 3、指定字段规则")]),t._v(" "),o("p",[t._v("消息字段可以是以下之一：")]),t._v(" "),o("ul",[o("li",[t._v("单数：格式良好的消息可以有零个或一个此字段（但不能超过一个）。这是 proto3 语法的默认字段规则。")]),t._v(" "),o("li",[o("code",[t._v("repeated")]),t._v("：该字段可以在格式良好的消息中重复任意次数（包括零次）。重复值的顺序将被保留。")])]),t._v(" "),o("p",[t._v("在 proto3 中，"),o("code",[t._v("repeated")]),t._v("标量数值类型的字段"),o("code",[t._v("packed")]),t._v("默认使用编码。")]),t._v(" "),o("p",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding#packed",target:"_blank",rel:"noopener noreferrer"}},[t._v("您可以在Protocol Buffer Encoding"),o("OutboundLink")],1),t._v("中找到有关"),o("code",[t._v("packed")]),t._v("编码的更多信息。")]),t._v(" "),o("h3",{attrs:{id:"_4、添加更多消息类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4、添加更多消息类型"}},[t._v("#")]),t._v(" 4、添加更多消息类型")]),t._v(" "),o("p",[t._v("可以在单个"),o("code",[t._v(".proto")]),t._v("文件中定义多种消息类型。如果您要定义多个相关消息，这很有用——例如，如果您想定义与您的"),o("code",[t._v("SearchResponse")]),t._v("消息类型相对应的回复消息格式，您可以将其添加到相同的"),o("code",[t._v(".proto")]),t._v(":")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SearchRequest {\n  string query = 1;\n  int32 page_number = 2;\n  int32 result_per_page = 3;\n}\n\nmessage SearchResponse {\n ...\n}\n")])])]),o("h3",{attrs:{id:"_5、添加评论"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5、添加评论"}},[t._v("#")]),t._v(" 5、添加评论")]),t._v(" "),o("p",[t._v("要向"),o("code",[t._v(".proto")]),t._v("文件添加注释，请使用 C/C++ 样式"),o("code",[t._v("//")]),t._v("和"),o("code",[t._v("/* ... */")]),t._v("语法。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("/* SearchRequest represents a search query, with pagination options to\n * indicate which results to include in the response. */\n\nmessage SearchRequest {\n  string query = 1;\n  int32 page_number = 2;  // Which page number do we want?\n  int32 result_per_page = 3;  // Number of results to return per page.\n}\n")])])]),o("h3",{attrs:{id:"_6、保留字段"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6、保留字段"}},[t._v("#")]),t._v(" 6、保留字段")]),t._v(" "),o("p",[t._v("如果您通过完全删除字段或将其注释掉来"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#updating",target:"_blank",rel:"noopener noreferrer"}},[t._v("更新消息类型，未来的用户可以在对类型进行自己的更新时重用字段编号。"),o("OutboundLink")],1),t._v("如果他们稍后加载相同的旧版本，这可能会导致严重问题"),o("code",[t._v(".proto")]),t._v("，包括数据损坏、隐私错误等。确保不会发生这种情况的一种方法是指定已删除字段的字段编号（和/或名称，这也可能导致 JSON 序列化问题）为"),o("code",[t._v("reserved")]),t._v(". 如果将来有任何用户尝试使用这些字段标识符，protocol buffer 编译器会抱怨。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('message Foo {\n  reserved 2, 15, 9 to 11;\n  reserved "foo", "bar";\n}\n')])])]),o("p",[t._v("请注意，您不能在同一"),o("code",[t._v("reserved")]),t._v("语句中混合字段名称和字段编号。")]),t._v(" "),o("h3",{attrs:{id:"_7、什么是从你的-proto"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7、什么是从你的-proto"}},[t._v("#")]),t._v(" 7、什么是从你的？"),o("code",[t._v(".proto")])]),t._v(" "),o("p",[t._v("当您在 a 上运行"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#generating",target:"_blank",rel:"noopener noreferrer"}},[t._v("协议缓冲区编译器"),o("OutboundLink")],1),o("code",[t._v(".proto")]),t._v("时，编译器会以您选择的语言生成代码，您需要使用文件中描述的消息类型，包括获取和设置字段值，将消息序列化到输出流，并从输入流中解析您的消息。")]),t._v(" "),o("ul",[o("li",[t._v("对于"),o("strong",[t._v("C++")]),t._v("，编译器从 each 生成一个"),o("code",[t._v(".h")]),t._v("and"),o("code",[t._v(".cc")]),t._v("文件"),o("code",[t._v(".proto")]),t._v("，并为文件中描述的每种消息类型提供一个类。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Java")]),t._v("，编译器会"),o("code",[t._v(".java")]),t._v("为每种消息类型生成一个包含类的文件，以及"),o("code",[t._v("Builder")]),t._v("用于创建消息类实例的特殊类。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Kotlin")]),t._v("，除了 Java 生成的代码之外，编译器还会"),o("code",[t._v(".kt")]),t._v("为每种消息类型生成一个文件，其中包含可用于简化创建消息实例的 DSL。")]),t._v(" "),o("li",[o("strong",[t._v("Python")]),t._v("有点不同——Python 编译器会生成一个模块*，*"),o("code",[t._v(".proto")]),t._v("其中包含您的 .")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Go")]),t._v("，编译器会为"),o("code",[t._v(".pb.go")]),t._v("文件中的每种消息类型生成一个文件类型。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Ruby")]),t._v("，编译器会生成一个"),o("code",[t._v(".rb")]),t._v("带有 Ruby 模块的文件，其中包含您的消息类型。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Objective-C")]),t._v("，编译器从 each 生成一个"),o("code",[t._v("pbobjc.h")]),t._v("and"),o("code",[t._v("pbobjc.m")]),t._v("文件"),o("code",[t._v(".proto")]),t._v("，并为文件中描述的每种消息类型提供一个类。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("C#")]),t._v("，编译器会"),o("code",[t._v(".cs")]),t._v("从 each 生成一个文件"),o("code",[t._v(".proto")]),t._v("，其中包含文件中描述的每种消息类型的类。")]),t._v(" "),o("li",[t._v("对于"),o("strong",[t._v("Dart")]),t._v("，编译器会为"),o("code",[t._v(".pb.dart")]),t._v("文件中的每种消息类型生成一个包含类的文件。")])]),t._v(" "),o("p",[t._v("您可以按照所选语言的教程（即将推出 proto3 版本）了解有关使用每种语言的 API 的更多信息。有关更多 API 详细信息，请参阅相关"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 参考"),o("OutboundLink")],1),t._v("（proto3 版本也即将推出）。")]),t._v(" "),o("h2",{attrs:{id:"二、标量值类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#二、标量值类型"}},[t._v("#")]),t._v(" 二、标量值类型")]),t._v(" "),o("p",[t._v("标量消息字段可以具有以下类型之一 - 该表显示"),o("code",[t._v(".proto")]),t._v("文件中指定的类型，以及自动生成的类中的相应类型：")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"left"}},[t._v("。原型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("笔记")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("C++ 类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("Java/Kotlin 类型[1]")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("蟒蛇类型[3]")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("走类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("红宝石类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("C# 类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("PHP 类型")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("飞镖类型")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}}),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("浮动64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}}),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("浮动32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("漂浮")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("双倍的")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。对负数进行编码效率低下——如果您的字段可能有负值，请改用 sint32。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("Fixnum 或 Bignum（根据需要）")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。对负数进行编码效率低下——如果您的字段可能有负值，请改用 sint64。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("比格南")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/字符串[6]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数[2]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("Fixnum 或 Bignum（根据需要）")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("单位")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长[2]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("比格南")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("乌龙")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/字符串[6]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("sint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。带符号的 int 值。这些比常规 int32 更有效地编码负数。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("Fixnum 或 Bignum（根据需要）")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("sint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用可变长度编码。带符号的 int 值。这些比常规 int64 更有效地编码负数。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("比格南")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/字符串[6]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("固定32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("总是四个字节。如果值通常大于 2 28 ，则比 uint32 更有效。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数[2]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("Fixnum 或 Bignum（根据需要）")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("单位")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("固定64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("总是八个字节。如果值通常大于 2 56 ，则比 uint64 更有效。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长[2]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("比格南")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("乌龙")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/字符串[6]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("固定32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("总是四个字节。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("Fixnum 或 Bignum（根据需要）")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("固定64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("总是八个字节。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/长[4]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("比格南")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("长")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数/字符串[6]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("整数64")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}}),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("TrueClass/FalseClass")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字符串必须始终包含 UTF-8 编码或 7 位 ASCII 文本，并且不能超过 2 32。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字符串/unicode [5]")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字符串 (UTF-8)")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("字节")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("可能包含不超过 2 32的任意字节序列。")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字节串")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("str (Python 2) 字节 (Python 3)")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("[]字节")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字符串 (ASCII-8BIT)")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("字节串")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("列表")])])])]),t._v(" "),o("p",[o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("当您在Protocol Buffer Encoding"),o("OutboundLink")],1),t._v("中序列化您的消息时，您可以了解有关这些类型如何编码的更多信息。")]),t._v(" "),o("p",[t._v("[1] Kotlin 使用 Java 中的相应类型，甚至是无符号类型，以确保在混合 Java/Kotlin 代码库中的兼容性。")]),t._v(" "),o("p",[t._v("[2]在 Java 中，无符号 32 位和 64 位整数使用它们的有符号对应物表示，最高位简单地存储在符号位中。")]),t._v(" "),o("p",[t._v("[3]在所有情况下，为字段设置值将执行类型检查以确保其有效。")]),t._v(" "),o("p",[t._v("[4] 64 位或无符号 32 位整数在解码时始终表示为 long，但如果在设置字段时给出 int，则可以是 int。在所有情况下，该值必须适合设置时表示的类型。见[2]。")]),t._v(" "),o("p",[t._v("[5] Python 字符串在解码时表示为 unicode，但如果给出 ASCII 字符串，则可以是 str（这可能会发生变化）。")]),t._v(" "),o("p",[t._v("[6]整数用于 64 位机器，字符串用于 32 位机器。")]),t._v(" "),o("h2",{attrs:{id:"三、默认值"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#三、默认值"}},[t._v("#")]),t._v(" 三、默认值")]),t._v(" "),o("p",[t._v("解析消息时，如果编码的消息不包含特定的奇异元素，则解析对象中的相应字段将设置为该字段的默认值。这些默认值是特定于类型的：")]),t._v(" "),o("ul",[o("li",[t._v("对于字符串，默认值为空字符串。")]),t._v(" "),o("li",[t._v("对于字节，默认值为空字节。")]),t._v(" "),o("li",[t._v("对于布尔值，默认值为 false。")]),t._v(" "),o("li",[t._v("对于数字类型，默认值为零。")]),t._v(" "),o("li",[t._v("对于"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#enum",target:"_blank",rel:"noopener noreferrer"}},[t._v("enums"),o("OutboundLink")],1),t._v("，默认值是第"),o("strong",[t._v("一个定义的 enum value")]),t._v("，它必须是 0。")]),t._v(" "),o("li",[t._v("对于消息字段，未设置该字段。它的确切值取决于语言。有关详细信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成的代码指南"),o("OutboundLink")],1),t._v("。")])]),t._v(" "),o("p",[t._v("重复字段的默认值为空（通常是相应语言的空列表）。")]),t._v(" "),o("p",[t._v("请注意，对于标量消息字段，一旦解析了消息，就无法判断该字段是显式设置为默认值（例如布尔值是否设置为"),o("code",[t._v("false")]),t._v("）还是根本没有设置：您应该牢记这一点定义消息类型时。例如，"),o("code",[t._v("false")]),t._v("如果您不希望在默认情况下也发生该行为，则不要在设置为时打开某些行为的布尔值。另请注意，如果标量消息字段"),o("strong",[t._v("设置")]),t._v("为其默认值，则该值将不会在线上序列化。")]),t._v(" "),o("p",[t._v("有关默认值如何在生成的代码中工作的更多详细信息，请参阅您选择的语言的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成代码指南"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("h2",{attrs:{id:"四、枚举"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#四、枚举"}},[t._v("#")]),t._v(" 四、枚举")]),t._v(" "),o("p",[t._v("在定义消息类型时，您可能希望其字段之一仅具有预定义的值列表之一。例如，假设您要"),o("code",[t._v("corpus")]),t._v("为每个 添加一个字段，"),o("code",[t._v("SearchRequest")]),t._v("其中语料库可以是"),o("code",[t._v("UNIVERSAL")]),t._v("、"),o("code",[t._v("WEB")]),t._v("、"),o("code",[t._v("IMAGES")]),t._v("、"),o("code",[t._v("LOCAL")]),t._v("、"),o("code",[t._v("NEWS")]),t._v("或。您可以通过在消息定义中添加一个非常简单的方法来做到这一点，并为每个可能的值添加一个常量。"),o("code",[t._v("PRODUCTS``VIDEO``enum")])]),t._v(" "),o("p",[t._v("在下面的示例中，我们添加了一个包含所有可能值的"),o("code",[t._v("enum")]),t._v("调用"),o("code",[t._v("Corpus")]),t._v("，以及一个 type 字段"),o("code",[t._v("Corpus")]),t._v("：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SearchRequest {\n  string query = 1;\n  int32 page_number = 2;\n  int32 result_per_page = 3;\n  enum Corpus {\n    UNIVERSAL = 0;\n    WEB = 1;\n    IMAGES = 2;\n    LOCAL = 3;\n    NEWS = 4;\n    PRODUCTS = 5;\n    VIDEO = 6;\n  }\n  Corpus corpus = 4;\n}\n")])])]),o("p",[t._v("如您所见，"),o("code",[t._v("Corpus")]),t._v("枚举的第一个常量映射到零：每个枚举定义都"),o("strong",[t._v("必须")]),t._v("包含一个映射到零的常量作为其第一个元素。这是因为：")]),t._v(" "),o("ul",[o("li",[t._v("必须有一个零值，以便我们可以使用 0 作为数字"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#default",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认值"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[t._v("零值必须是第一个元素，以便与第一个枚举值始终为默认值的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("proto2"),o("OutboundLink")],1),t._v("语义兼容。")])]),t._v(" "),o("p",[t._v("您可以通过将相同的值分配给不同的枚举常量来定义别名。为此，您需要将"),o("code",[t._v("allow_alias")]),t._v("选项设置为"),o("code",[t._v("true")]),t._v("，否则协议编译器将在找到别名时生成错误消息。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message MyMessage1 {\n  enum EnumAllowingAlias {\n    option allow_alias = true;\n    UNKNOWN = 0;\n    STARTED = 1;\n    RUNNING = 1;\n  }\n}\nmessage MyMessage2 {\n  enum EnumNotAllowingAlias {\n    UNKNOWN = 0;\n    STARTED = 1;\n    // RUNNING = 1;  // Uncommenting this line will cause a compile error inside Google and a warning message outside.\n  }\n}\n")])])]),o("p",[t._v("枚举器常量必须在 32 位整数范围内。由于"),o("code",[t._v("enum")]),t._v("值在线路上使用"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("varint 编码"),o("OutboundLink")],1),t._v("，因此负值效率低下，因此不推荐使用。您可以"),o("code",[t._v("enum")]),t._v("在消息定义中定义 s，如上例所示，也可以在外部定义 - 这些"),o("code",[t._v("enum")]),t._v("s 可以在"),o("code",[t._v(".proto")]),t._v("文件中的任何消息定义中重用。您还可以使用"),o("code",[t._v("enum")]),t._v("在一条消息中声明的类型作为另一条消息中字段的类型，使用语法"),o("code",[t._v("_MessageType_._EnumType_")]),t._v(".")]),t._v(" "),o("p",[t._v("当您在"),o("code",[t._v(".proto")]),t._v("使用 的a 上运行协议缓冲区编译器时"),o("code",[t._v("enum")]),t._v("，生成的代码将有一个对应"),o("code",[t._v("enum")]),t._v("于 Java、Kotlin 或 C++ 的代码，或者一个"),o("code",[t._v("EnumDescriptor")]),t._v("用于 Python 的特殊类，用于在运行时创建一组具有整数值的符号常量——生成的类。")]),t._v(" "),o("p",[o("strong",[t._v("警告：")]),t._v(" 生成的代码可能会受到特定于语言的枚举数限制（一种语言的低千）。请查看您计划使用的语言的限制。")]),t._v(" "),o("p",[t._v("在反序列化期间，无法识别的枚举值将保留在消息中，尽管在反序列化消息时如何表示这取决于语言。在支持具有超出指定符号范围的值的开放枚举类型的语言中，例如 C++ 和 Go，未知的枚举值简单地存储为其底层整数表示。在 Java 等具有封闭枚举类型的语言中，枚举中的 case 用于表示无法识别的值，并且可以使用特殊的访问器访问底层整数。在任何一种情况下，如果消息被序列化，则无法识别的值仍将与消息一起序列化。")]),t._v(" "),o("p",[t._v("有关如何"),o("code",[t._v("enum")]),t._v("在应用程序中使用 message 的更多信息，请参阅所选语言的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成代码指南"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("h3",{attrs:{id:"保留值"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#保留值"}},[t._v("#")]),t._v(" 保留值")]),t._v(" "),o("p",[t._v("如果您通过完全删除枚举条目或将其注释掉来"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#updating",target:"_blank",rel:"noopener noreferrer"}},[t._v("更新"),o("OutboundLink")],1),t._v("枚举类型，将来的用户可以在对类型进行自己的更新时重用该数值。如果他们稍后加载相同的旧版本，这可能会导致严重问题"),o("code",[t._v(".proto")]),t._v("，包括数据损坏、隐私错误等。确保不会发生这种情况的一种方法是指定已删除条目的数值（和/或名称，这也可能导致 JSON 序列化问题）为"),o("code",[t._v("reserved")]),t._v(". 如果将来有任何用户尝试使用这些标识符，protocol buffer 编译器会抱怨。"),o("code",[t._v("max")]),t._v("您可以使用关键字指定保留的数值范围达到最大可能值。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('enum Foo {\n  reserved 2, 15, 9 to 11, 40 to max;\n  reserved "FOO", "BAR";\n}\n')])])]),o("p",[o("code",[t._v("reserved")]),t._v("请注意，您不能在同一语句中混合字段名称和数值。")]),t._v(" "),o("h2",{attrs:{id:"五、使用其他消息类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#五、使用其他消息类型"}},[t._v("#")]),t._v(" 五、使用其他消息类型")]),t._v(" "),o("p",[t._v("您可以使用其他消息类型作为字段类型。例如，假设您想"),o("code",[t._v("Result")]),t._v("在每条"),o("code",[t._v("SearchResponse")]),t._v("消息中包含消息——为此，您可以"),o("code",[t._v("Result")]),t._v("在同一条消息中定义一个消息类型，"),o("code",[t._v(".proto")]),t._v("然后指定一个类型为"),o("code",[t._v("Result")]),t._v("in的字段"),o("code",[t._v("SearchResponse")]),t._v("：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SearchResponse {\n  repeated Result results = 1;\n}\n\nmessage Result {\n  string url = 1;\n  string title = 2;\n  repeated string snippets = 3;\n}\n")])])]),o("h3",{attrs:{id:"_1、导入定义"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1、导入定义"}},[t._v("#")]),t._v(" 1、导入定义")]),t._v(" "),o("p",[t._v("在上面的例子中，"),o("code",[t._v("Result")]),t._v("消息类型定义在同一个文件中"),o("code",[t._v("SearchResponse")]),t._v("——如果你想用作字段类型的消息类型已经在另一个"),o("code",[t._v(".proto")]),t._v("文件中定义了怎么办？")]),t._v(" "),o("p",[o("em",[t._v("您可以通过导入")]),o("code",[t._v(".proto")]),t._v("来自其他文件的定义来使用它们。要导入另一个的定义，请在文件顶部添加一个 import 语句："),o("code",[t._v(".proto")])]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('import "myproject/other_protos.proto";\n')])])]),o("p",[t._v("默认情况下，您只能使用直接导入"),o("code",[t._v(".proto")]),t._v("文件中的定义。但是，有时您可能需要将"),o("code",[t._v(".proto")]),t._v("文件移动到新位置。您可以在旧位置放置一个占位符文件，以使用该概念将所有导入转发到新位置，而不是直接移动"),o("code",[t._v(".proto")]),t._v("文件并在一次更改中更新所有调用站点。"),o("code",[t._v(".proto``import public")])]),t._v(" "),o("p",[o("strong",[t._v("请注意，公共导入功能在 Java 中不可用。")])]),t._v(" "),o("p",[o("code",[t._v("import public``import public")]),t._v("任何导入包含该语句的原型的代码都可以传递依赖依赖项。例如：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('// new.proto\n// All definitions are moved here\n// old.proto\n// This is the proto that all clients are importing.\nimport public "new.proto";\nimport "other.proto";\n// client.proto\nimport "old.proto";\n// You use definitions from old.proto and new.proto, but not other.proto\n')])])]),o("p",[o("code",[t._v("-I")]),t._v("协议编译器使用/"),o("code",[t._v("--proto_path")]),t._v("标志在协议编译器命令行上指定的一组目录中搜索导入的文件。如果没有给出标志，它会在调用编译器的目录中查找。通常，您应该将"),o("code",[t._v("--proto_path")]),t._v("标志设置为项目的根目录，并为所有导入使用完全限定名称。")]),t._v(" "),o("h3",{attrs:{id:"_2、使用-proto2-消息类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用-proto2-消息类型"}},[t._v("#")]),t._v(" 2、使用 proto2 消息类型")]),t._v(" "),o("p",[t._v("可以导入"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("proto2"),o("OutboundLink")],1),t._v("消息类型并在您的 proto3 消息中使用它们，反之亦然。但是，proto2 枚举不能直接在 proto3 语法中使用（如果导入的 proto2 消息使用它们也没关系）。")]),t._v(" "),o("h2",{attrs:{id:"六、嵌套类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#六、嵌套类型"}},[t._v("#")]),t._v(" 六、嵌套类型")]),t._v(" "),o("p",[t._v("您可以在其他消息类型中定义和使用消息类型，如下例所示 - 这里"),o("code",[t._v("Result")]),t._v("消息是在消息内部定义的"),o("code",[t._v("SearchResponse")]),t._v("：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SearchResponse {\n  message Result {\n    string url = 1;\n    string title = 2;\n    repeated string snippets = 3;\n  }\n  repeated Result results = 1;\n}\n")])])]),o("p",[t._v("如果您想在其父消息类型之外重用此消息类型，请将其称为"),o("code",[t._v("_Parent_._Type_")]),t._v("：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SomeOtherMessage {\n  SearchResponse.Result result = 1;\n}\n")])])]),o("p",[t._v("您可以随意嵌套消息：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message Outer {                  // Level 0\n  message MiddleAA {  // Level 1\n    message Inner {   // Level 2\n      int64 ival = 1;\n      bool  booly = 2;\n    }\n  }\n  message MiddleBB {  // Level 1\n    message Inner {   // Level 2\n      int32 ival = 1;\n      bool  booly = 2;\n    }\n  }\n}\n")])])]),o("h2",{attrs:{id:"七、更新消息类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#七、更新消息类型"}},[t._v("#")]),t._v(" 七、更新消息类型")]),t._v(" "),o("p",[t._v("如果现有的消息类型不再满足您的所有需求 - 例如，您希望消息格式有一个额外的字段 - 但您仍然希望使用使用旧格式创建的代码，请不要担心！在不破坏任何现有代码的情况下更新消息类型非常简单。只需记住以下规则：")]),t._v(" "),o("ul",[o("li",[t._v("不要更改任何现有字段的字段编号。")]),t._v(" "),o("li",[t._v("如果您添加新字段，则使用“旧”消息格式的代码序列化的任何消息仍然可以由新生成的代码解析。您应该记住这些元素的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#default",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认值"),o("OutboundLink")],1),t._v("，以便新代码可以正确地与旧代码生成的消息交互。类似地，新代码创建的消息可以由旧代码解析：旧二进制文件在解析时会忽略新字段。有关详细信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#unknowns",target:"_blank",rel:"noopener noreferrer"}},[t._v("未知字段"),o("OutboundLink")],1),t._v("部分。")]),t._v(" "),o("li",[t._v("只要在更新的消息类型中不再使用字段编号，就可以删除字段。您可能想要重命名该字段，可能添加前缀“OBSOLETE_”，或将字段编号设为"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#reserved",target:"_blank",rel:"noopener noreferrer"}},[t._v("保留"),o("OutboundLink")],1),t._v("，以便您的未来用户"),o("code",[t._v(".proto")]),t._v("不会意外重用该编号。")]),t._v(" "),o("li",[o("code",[t._v("int32")]),t._v("、"),o("code",[t._v("uint32")]),t._v("、"),o("code",[t._v("int64")]),t._v("、"),o("code",[t._v("uint64")]),t._v("和"),o("code",[t._v("bool")]),t._v("都是兼容的——这意味着您可以将字段从其中一种类型更改为另一种类型，而不会破坏向前或向后兼容性。如果从不适合相应类型的线路中解析出一个数字，您将获得与在 C++ 中将该数字强制转换为该类型相同的效果（例如，如果一个 64 位数字被读取为int32，它将被截断为 32 位）。")]),t._v(" "),o("li",[o("code",[t._v("sint32")]),t._v("并且"),o("code",[t._v("sint64")]),t._v("彼此兼容，但与其他整数类型"),o("em",[t._v("不")]),t._v("兼容。")]),t._v(" "),o("li",[o("code",[t._v("string")]),t._v("并且"),o("code",[t._v("bytes")]),t._v("只要字节是有效的 UTF-8 就兼容。")]),t._v(" "),o("li",[o("code",[t._v("bytes")]),t._v("如果字节包含消息的编码版本，则嵌入消息是兼容的。")]),t._v(" "),o("li",[o("code",[t._v("fixed32")]),t._v("与"),o("code",[t._v("sfixed32")]),t._v("和"),o("code",[t._v("fixed64")]),t._v("兼容"),o("code",[t._v("sfixed64")]),t._v("。")]),t._v(" "),o("li",[t._v("对于"),o("code",[t._v("string")]),t._v("、"),o("code",[t._v("bytes")]),t._v("和 消息字段，"),o("code",[t._v("optional")]),t._v("与 兼容"),o("code",[t._v("repeated")]),t._v("。给定重复字段的序列化数据作为输入，"),o("code",[t._v("optional")]),t._v("如果它是原始类型字段，则期望此字段的客户端将采用最后一个输入值，如果它是消息类型字段，则合并所有输入元素。请注意，这对于数字类型（包括布尔值和枚举）通常不安全**。**数字类型的重复字段可以以"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding#packed",target:"_blank",rel:"noopener noreferrer"}},[t._v("打包"),o("OutboundLink")],1),o("code",[t._v("optional")]),t._v("格式序列化，当需要字段时将无法正确解析。")]),t._v(" "),o("li",[o("code",[t._v("enum")]),t._v("与"),o("code",[t._v("int32")]),t._v(", "),o("code",[t._v("uint32")]),t._v(", "),o("code",[t._v("int64")]),t._v(", 和"),o("code",[t._v("uint64")]),t._v("有线格式兼容（请注意，如果不合适，值将被截断）。但是请注意，当消息被反序列化时，客户端代码可能会以不同的方式对待它们：例如，无法识别的 proto3"),o("code",[t._v("enum")]),t._v("类型将保留在消息中，但是当消息被反序列化时如何表示则取决于语言。Int 字段总是只保留它们的值。")]),t._v(" "),o("li",[t._v("将单个值更改为"),o("strong",[t._v("new")]),t._v(" "),o("code",[t._v("oneof")]),t._v("的成员是安全且二进制兼容的。"),o("code",[t._v("oneof")]),t._v("如果您确定没有代码一次设置多个字段，则将多个字段移动到一个新字段中可能是安全的。将任何字段移动到现有字段"),o("code",[t._v("oneof")]),t._v("中是不安全的。")])]),t._v(" "),o("h2",{attrs:{id:"八、未知字段"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#八、未知字段"}},[t._v("#")]),t._v(" 八、未知字段")]),t._v(" "),o("p",[t._v("未知字段是格式良好的协议缓冲区序列化数据，表示解析器无法识别的字段。例如，当旧二进制文件用新字段解析新二进制文件发送的数据时，这些新字段将成为旧二进制文件中的未知字段。")]),t._v(" "),o("p",[t._v("最初，proto3 消息在解析过程中总是丢弃未知字段，但在 3.5 版本中，我们重新引入了保留未知字段以匹配 proto2 行为。在 3.5 及更高版本中，未知字段在解析期间保留并包含在序列化输出中。")]),t._v(" "),o("h2",{attrs:{id:"九、any"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#九、any"}},[t._v("#")]),t._v(" 九、Any")]),t._v(" "),o("p",[t._v("消息类型允许您将"),o("code",[t._v("Any")]),t._v("消息用作嵌入类型，而无需它们的 .proto 定义。An"),o("code",[t._v("Any")]),t._v("包含任意序列化消息 as "),o("code",[t._v("bytes")]),t._v("，以及充当全局唯一标识符并解析为该消息类型的 URL。要使用该"),o("code",[t._v("Any")]),t._v("类型，您需要"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#other",target:"_blank",rel:"noopener noreferrer"}},[t._v("导入"),o("OutboundLink")],1),t._v(" "),o("code",[t._v("google/protobuf/any.proto")]),t._v(".")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('import "google/protobuf/any.proto";\n\nmessage ErrorStatus {\n  string message = 1;\n  repeated google.protobuf.Any details = 2;\n}\n')])])]),o("p",[t._v("给定消息类型的默认类型 URL 是"),o("code",[t._v("type.googleapis.com/_packagename_._messagename_")]),t._v("。")]),t._v(" "),o("p",[t._v("不同的语言实现将支持运行时库助手以"),o("code",[t._v("Any")]),t._v("类型安全的方式打包和解包值——例如，在 Java 中，"),o("code",[t._v("Any")]),t._v("类型将具有特殊的"),o("code",[t._v("pack()")]),t._v("和"),o("code",[t._v("unpack()")]),t._v("访问器，而在 C++ 中则有"),o("code",[t._v("PackFrom()")]),t._v("和"),o("code",[t._v("UnpackTo()")]),t._v("方法：")]),t._v(" "),o("div",{staticClass:"language-c++ extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("// Storing an arbitrary message type in Any.\nNetworkErrorDetails details = ...;\nErrorStatus status;\nstatus.add_details()->PackFrom(details);\n\n// Reading an arbitrary message from Any.\nErrorStatus status = ...;\nfor (const Any& detail : status.details()) {\n  if (detail.Is<NetworkErrorDetails>()) {\n    NetworkErrorDetails network_error;\n    detail.UnpackTo(&network_error);\n    ... processing network_error ...\n  }\n}\n")])])]),o("p",[o("strong",[t._v("目前，用于处理"),o("code",[t._v("Any")]),t._v("类型的运行时库正在开发")]),t._v("中。")]),t._v(" "),o("p",[t._v("如果您已经熟悉"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("proto2 语法"),o("OutboundLink")],1),t._v("，则"),o("code",[t._v("Any")]),t._v("可以保存任意 proto3 消息，类似于可以允许"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto#extensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("扩展"),o("OutboundLink")],1),t._v("的 proto2 消息。")]),t._v(" "),o("h2",{attrs:{id:"十、oneof"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十、oneof"}},[t._v("#")]),t._v(" 十、oneof")]),t._v(" "),o("p",[t._v("如果您有一条包含多个字段的消息，并且最多同时设置一个字段，您可以强制执行此行为并使用 oneof 功能节省内存。")]),t._v(" "),o("p",[t._v("oneof 字段与常规字段一样，除了一个 oneof 共享内存中的所有字段外，最多可以同时设置一个字段。设置 oneof 的任何成员会自动清除所有其他成员。"),o("code",[t._v("case()")]),t._v("您可以使用特殊或方法检查 oneof 中设置的值（如果有）"),o("code",[t._v("WhichOneof()")]),t._v("，具体取决于您选择的语言。")]),t._v(" "),o("h3",{attrs:{id:"_1、使用-oneof"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1、使用-oneof"}},[t._v("#")]),t._v(" 1、使用 Oneof")]),t._v(" "),o("p",[t._v("要在您的中定义 oneof，请"),o("code",[t._v(".proto")]),t._v("使用"),o("code",[t._v("oneof")]),t._v("关键字后跟 oneof 名称，在这种情况下"),o("code",[t._v("test_oneof")]),t._v("：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message SampleMessage {\n  oneof test_oneof {\n    string name = 4;\n    SubMessage sub_message = 9;\n  }\n}\n")])])]),o("p",[t._v("然后，您将 oneof 字段添加到 oneof 定义中。您可以添加任何类型的字段，但"),o("code",[t._v("map")]),t._v("字段和"),o("code",[t._v("repeated")]),t._v("字段除外。")]),t._v(" "),o("p",[t._v("在您生成的代码中，oneof 字段具有与常规字段相同的 getter 和 setter。您还可以获得一种特殊的方法来检查 oneof 中设置了哪个值（如果有）。"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("您可以在相关API 参考"),o("OutboundLink")],1),t._v("中找到有关所选语言的 oneof API 的更多信息。")]),t._v(" "),o("h3",{attrs:{id:"_2、oneof的特点"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2、oneof的特点"}},[t._v("#")]),t._v(" 2、oneof的特点")]),t._v(" "),o("ul",[o("li",[o("p",[t._v("设置 oneof 字段将自动清除 oneof 的所有其他成员。因此，如果您设置了多个 oneof 字段，则只有您设置的"),o("em",[t._v("最后一个")]),t._v("字段仍有值。")]),t._v(" "),o("div",{staticClass:"language-c++ extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('SampleMessage message;\nmessage.set_name("name");\nCHECK(message.has_name());\nmessage.mutable_sub_message();   // Will clear name field.\nCHECK(!message.has_name());\n')])])])]),t._v(" "),o("li",[o("p",[t._v("如果解析器在线路上遇到同一个成员的多个成员，则在解析的消息中只使用最后一个看到的成员。")])]),t._v(" "),o("li",[o("p",[t._v("oneof 不能是"),o("code",[t._v("repeated")]),t._v("。")])]),t._v(" "),o("li",[o("p",[t._v("反射 API 适用于 oneof 字段。")])]),t._v(" "),o("li",[o("p",[t._v("如果将 oneof 字段设置为默认值（例如将 int32 oneof 字段设置为 0），则会设置该 oneof 字段的“大小写”，并且该值将在线上序列化。")])]),t._v(" "),o("li",[o("p",[t._v("如果您使用 C++，请确保您的代码不会导致内存崩溃。以下示例代码将崩溃，因为"),o("code",[t._v("sub_message")]),t._v("已通过调用该"),o("code",[t._v("set_name()")]),t._v("方法删除。")]),t._v(" "),o("div",{staticClass:"language-c++ extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('SampleMessage message;\nSubMessage* sub_message = message.mutable_sub_message();\nmessage.set_name("name");      // Will delete sub_message\nsub_message->set_...            // Crashes here\n')])])])]),t._v(" "),o("li",[o("p",[t._v("再次在 C++ 中，如果您"),o("code",[t._v("Swap()")]),t._v("使用 oneofs 发送两条消息，则每条消息都将以另一个的 oneof 情况结束：在下面的示例中，"),o("code",[t._v("msg1")]),t._v("将具有 a"),o("code",[t._v("sub_message")]),t._v("和"),o("code",[t._v("msg2")]),t._v("将具有"),o("code",[t._v("name")]),t._v(".")]),t._v(" "),o("div",{staticClass:"language-c++ extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('SampleMessage msg1;\nmsg1.set_name("name");\nSampleMessage msg2;\nmsg2.mutable_sub_message();\nmsg1.swap(&msg2);\nCHECK(msg1.has_sub_message());\nCHECK(msg2.has_name());\n')])])])])]),t._v(" "),o("h3",{attrs:{id:"_3、向后兼容性问题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3、向后兼容性问题"}},[t._v("#")]),t._v(" 3、向后兼容性问题")]),t._v(" "),o("p",[t._v("添加或删除其中一个字段时要小心。如果检查 oneof 的值返回"),o("code",[t._v("None")]),t._v("/ "),o("code",[t._v("NOT_SET")]),t._v("，则可能意味着 oneof 尚未设置或已设置为 oneof 不同版本中的字段。没有办法区分，因为无法知道线路上的未知字段是否是 oneof 的成员。")]),t._v(" "),o("h4",{attrs:{id:"标签重用问题"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#标签重用问题"}},[t._v("#")]),t._v(" 标签重用问题")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("将字段移入或移出 oneof")]),t._v("：在消息被序列化和解析后，您可能会丢失一些信息（某些字段将被清除）。但是，您可以安全地将单个字段移动到"),o("strong",[t._v("新")]),t._v("的oneof 中，并且如果知道只设置了一个字段，则可以移动多个字段。")]),t._v(" "),o("li",[o("strong",[t._v("删除 oneof 字段并重新添加")]),t._v("：这可能会在消息被序列化和解析后清除您当前设置的 oneof 字段。")]),t._v(" "),o("li",[o("strong",[t._v("拆分或合并 oneof")]),t._v("：这与移动常规字段有类似的问题。")])]),t._v(" "),o("h2",{attrs:{id:"十一、map"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十一、map"}},[t._v("#")]),t._v(" 十一、map")]),t._v(" "),o("p",[t._v("如果您想创建关联映射作为数据定义的一部分，protocol buffers 提供了一种方便的快捷语法：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("map<key_type, value_type> map_field = N;\n")])])]),o("p",[t._v("...其中"),o("code",[t._v("key_type")]),t._v("可以是任何整数或字符串类型（因此，除浮点类型和之外的任何"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#scalar",target:"_blank",rel:"noopener noreferrer"}},[t._v("标量"),o("OutboundLink")],1),o("code",[t._v("bytes")]),t._v("类型）。请注意， enum 不是有效的"),o("code",[t._v("key_type")]),t._v(". "),o("code",[t._v("value_type")]),t._v("可以是任何类型，除了另一个地图。")]),t._v(" "),o("p",[t._v("因此，例如，如果您想创建一个项目映射，其中每条"),o("code",[t._v("Project")]),t._v("消息都与一个字符串键相关联，您可以这样定义它：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("map<string, Project> projects = 3;\n")])])]),o("ul",[o("li",[t._v("地图字段不能是"),o("code",[t._v("repeated")]),t._v("。")]),t._v(" "),o("li",[t._v("地图值的线格式排序和地图迭代排序是未定义的，因此您不能依赖地图项处于特定顺序。")]),t._v(" "),o("li",[t._v("为 a 生成文本格式时"),o("code",[t._v(".proto")]),t._v("，地图按键排序。数字键按数字排序。")]),t._v(" "),o("li",[t._v("从连线解析或合并时，如果有重复的映射键，则使用最后看到的键。从文本格式解析地图时，如果有重复的键，则解析可能会失败。")]),t._v(" "),o("li",[t._v("如果您为映射字段提供键但没有值，则该字段被序列化时的行为取决于语言。在 C++、Java、Kotlin 和 Python 中，类型的默认值是序列化的，而在其他语言中则没有序列化。")])]),t._v(" "),o("p",[t._v("生成的地图 API 目前可用于所有 proto3 支持的语言。"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("您可以在相关API 参考"),o("OutboundLink")],1),t._v("中找到有关所选语言的地图 API 的更多信息。")]),t._v(" "),o("h3",{attrs:{id:"向后兼容性"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#向后兼容性"}},[t._v("#")]),t._v(" 向后兼容性")]),t._v(" "),o("p",[t._v("map 语法在网络上等同于以下内容，因此不支持 map 的协议缓冲区实现仍然可以处理您的数据：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message MapFieldEntry {\n  key_type key = 1;\n  value_type value = 2;\n}\n\nrepeated MapFieldEntry map_field = N;\n")])])]),o("p",[t._v("任何支持映射的协议缓冲区实现都必须生成和接受上述定义可以接受的数据。")]),t._v(" "),o("h2",{attrs:{id:"十二、packages"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十二、packages"}},[t._v("#")]),t._v(" 十二、packages")]),t._v(" "),o("p",[t._v("您可以将可选"),o("code",[t._v("package")]),t._v("说明符添加到"),o("code",[t._v(".proto")]),t._v("文件中，以防止协议消息类型之间的名称冲突。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("package foo.bar;\nmessage Open { ... }\n")])])]),o("p",[t._v("然后，您可以在定义消息类型的字段时使用包说明符：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("message Foo {\n  ...\n  foo.bar.Open open = 1;\n  ...\n}\n")])])]),o("p",[t._v("包说明符影响生成代码的方式取决于您选择的语言：")]),t._v(" "),o("ul",[o("li",[t._v("在**C++**中，生成的类被包装在 C++ 命名空间中。例如，"),o("code",[t._v("Open")]),t._v("将在命名空间中"),o("code",[t._v("foo::bar")]),t._v("。")]),t._v(" "),o("li",[t._v("在"),o("strong",[t._v("Java")]),t._v("和"),o("strong",[t._v("Kotlin")]),t._v("中，该包用作 Java 包，除非您"),o("code",[t._v("option java_package")]),t._v("在"),o("code",[t._v(".proto")]),t._v("文件中明确提供一个。")]),t._v(" "),o("li",[t._v("在"),o("strong",[t._v("Python")]),t._v("中， package 指令被忽略，因为 Python 模块是根据它们在文件系统中的位置进行组织的。")]),t._v(" "),o("li",[t._v("在"),o("strong",[t._v("Go")]),t._v("中，包用作 Go 包名称，除非您"),o("code",[t._v("option go_package")]),t._v("在"),o("code",[t._v(".proto")]),t._v("文件中明确提供。")]),t._v(" "),o("li",[t._v("在"),o("strong",[t._v("Ruby")]),t._v("中，生成的类封装在嵌套的 Ruby 命名空间中，转换为所需的 Ruby 大写样式（第一个字母大写；如果第一个字符不是字母，"),o("code",[t._v("PB_")]),t._v("则在前面）。例如，"),o("code",[t._v("Open")]),t._v("将在命名空间中"),o("code",[t._v("Foo::Bar")]),t._v("。")]),t._v(" "),o("li",[t._v("在**C#**中，包在转换为 PascalCase 后用作命名空间，除非您"),o("code",[t._v("option csharp_namespace")]),t._v("在"),o("code",[t._v(".proto")]),t._v("文件中明确提供 an。例如，"),o("code",[t._v("Open")]),t._v("将在命名空间中"),o("code",[t._v("Foo.Bar")]),t._v("。")])]),t._v(" "),o("h3",{attrs:{id:"包和名称解析"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#包和名称解析"}},[t._v("#")]),t._v(" 包和名称解析")]),t._v(" "),o("p",[t._v("协议缓冲区语言中的类型名称解析与 C++ 类似：首先搜索最内部的范围，然后搜索下一个最内部的范围，依此类推，每个包都被认为是其父包的“内部”。一个领先的'.' （例如，"),o("code",[t._v(".foo.bar.Baz")]),t._v("）表示从最外面的范围开始。")]),t._v(" "),o("p",[t._v("协议缓冲区编译器通过解析导入的"),o("code",[t._v(".proto")]),t._v("文件来解析所有类型名称。每种语言的代码生成器都知道如何引用该语言中的每种类型，即使它有不同的范围规则。")]),t._v(" "),o("h2",{attrs:{id:"十三、定义服务"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十三、定义服务"}},[t._v("#")]),t._v(" 十三、定义服务")]),t._v(" "),o("p",[t._v("如果您想在 RPC（远程过程调用）系统中使用您的消息类型，您可以在一个"),o("code",[t._v(".proto")]),t._v("文件中定义一个 RPC 服务接口，并且协议缓冲区编译器将以您选择的语言生成服务接口代码和存根。因此，例如，如果你想定义一个 RPC 服务，它的方法接受你的"),o("code",[t._v("SearchRequest")]),t._v("并返回 a "),o("code",[t._v("SearchResponse")]),t._v("，你可以在你的"),o("code",[t._v(".proto")]),t._v("文件中定义它，如下所示：")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("service SearchService {\n  rpc Search(SearchRequest) returns (SearchResponse);\n}\n")])])]),o("p",[t._v("与协议缓冲区一起使用的最直接的 RPC 系统是"),o("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),o("OutboundLink")],1),t._v("：由 Google 开发的一种语言和平台中立的开源 RPC 系统。gRPC 特别适用于协议缓冲区，并允许您"),o("code",[t._v(".proto")]),t._v("使用特殊的协议缓冲区编译器插件直接从文件中生成相关的 RPC 代码。")]),t._v(" "),o("p",[t._v("如果您不想使用 gRPC，也可以将协议缓冲区与您自己的 RPC 实现一起使用。"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto#services",target:"_blank",rel:"noopener noreferrer"}},[t._v("您可以在Proto2 语言指南"),o("OutboundLink")],1),t._v("中找到更多相关信息。")]),t._v(" "),o("p",[t._v("还有一些正在进行的第三方项目为 Protocol Buffers 开发 RPC 实现。有关我们了解的项目的链接列表，请参阅"),o("a",{attrs:{href:"https://github.com/protocolbuffers/protobuf/blob/master/docs/third_party.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三方附加组件 wiki 页面"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("h2",{attrs:{id:"十四、json-映射"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十四、json-映射"}},[t._v("#")]),t._v(" 十四、JSON 映射")]),t._v(" "),o("p",[t._v("Proto3 支持 JSON 中的规范编码，从而更容易在系统之间共享数据。下表中按类型描述了编码。")]),t._v(" "),o("p",[t._v("如果 JSON 编码的数据中缺少某个值，或者它的值为，则在解析到协议缓冲区时"),o("code",[t._v("null")]),t._v("，它将被解释为适当的"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#default",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认值。"),o("OutboundLink")],1),t._v("如果某个字段在协议缓冲区中具有默认值，则在 JSON 编码的数据中默认将其省略以节省空间。实现可以提供选项以在 JSON 编码的输出中发出具有默认值的字段。")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",{staticStyle:{"text-align":"left"}},[t._v("原型3")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("JSON")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("JSON 示例")]),t._v(" "),o("th",{staticStyle:{"text-align":"left"}},[t._v("笔记")])])]),t._v(" "),o("tbody",[o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("信息")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("目的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('{"fooBar": v, "g": null, …}')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("生成 JSON 对象。消息字段名称映射到 lowerCamelCase 并成为 JSON 对象键。如果指定了field 选项，则指定的值将用作键。解析器接受 lowerCamelCase 名称（或选项指定的名称）和原始 proto 字段名称。是所有字段类型的可接受值，并被视为相应字段类型的默认值。"),o("code",[t._v("json_name``json_name``null")])])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("枚举")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"FOO_BAR"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用 proto 中指定的枚举值的名称。解析器接受枚举名称和整数值。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("地图<K,V>")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("目的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('{"k": v, …}')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("所有键都转换为字符串。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("重复V")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("大批")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("[v, …]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("null")]),t._v("被接受为空列表"),o("code",[t._v("[]")]),t._v("。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("布尔")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("真假")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("true, false")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"Hello World!"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("字节")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("base64 字符串")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"YWJjMTIzIT8kKiYoKSctPUB+"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 值将是使用带有填充的标准 base64 编码编码为字符串的数据。接受带有/不带有填充的标准或 URL 安全的 base64 编码。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("int32，固定32，uint32")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("数字")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("1, -10, 0")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 值将是一个十进制数。接受数字或字符串。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("int64、fixed64、uint64")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"1", "-10"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 值将是一个十进制字符串。接受数字或字符串。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("浮动，双")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("数字")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('1.1, -10.0, 0, "NaN", "Infinity"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 值将是一个数字或特殊字符串值“NaN”、“Infinity”和“-Infinity”之一。接受数字或字符串。也接受指数符号。-0 被认为等同于 0。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("任何")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('{"@type": "url", "f": v, … }')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("如果"),o("code",[t._v("Any")]),t._v("包含具有特殊 JSON 映射的值，则将按如下方式转换：. 否则，会将值转换为 JSON 对象，并插入字段以指示实际数据类型。"),o("code",[t._v('{"@type": xxx, "value": yyy}``"@type"')])])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("时间戳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"1972-01-01T10:00:20.021Z"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("使用 RFC 3339，其中生成的输出将始终进行 Z 归一化，并使用 0、3、6 或 9 位小数。也接受除“Z”之外的偏移量。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("期间")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"1.000340012s", "1s"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("生成的输出始终包含 0、3、6 或 9 个小数位，具体取决于所需的精度，后跟后缀“s”。接受任何小数位（也没有），只要它们符合纳秒精度并且需要后缀“s”。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("结构")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("object")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("{ … }")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("任何 JSON 对象。见。"),o("code",[t._v("struct.proto")])])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("包装器类型")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("各种类型")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('2, "2", "foo", true, "true", null, 0, …')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("包装器在 JSON 中使用与包装的原始类型相同的表示，除了"),o("code",[t._v("null")]),t._v("在数据转换和传输期间允许和保留。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("现场掩码")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("细绳")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v('"f.fooBar,h"')])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("见。"),o("code",[t._v("field_mask.proto")])])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("列表值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("大批")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("[foo, bar, …]")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("价值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("价值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}}),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("任何 JSON 值。检查"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Value",target:"_blank",rel:"noopener noreferrer"}},[t._v("google.protobuf.Value"),o("OutboundLink")],1),t._v("了解详情。")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("空值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("空值")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}}),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 空")])]),t._v(" "),o("tr",[o("td",{staticStyle:{"text-align":"left"}},[t._v("空的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("目的")]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[o("code",[t._v("{}")])]),t._v(" "),o("td",{staticStyle:{"text-align":"left"}},[t._v("一个空的 JSON 对象")])])])]),t._v(" "),o("h3",{attrs:{id:"json-选项"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#json-选项"}},[t._v("#")]),t._v(" JSON 选项")]),t._v(" "),o("p",[t._v("proto3 JSON 实现可以提供以下选项：")]),t._v(" "),o("ul",[o("li",[o("strong",[t._v("Emit fields with default values")]),t._v("：默认情况下，proto3 JSON 输出中会省略具有默认值的字段。实现可以提供一个选项来覆盖此行为并使用其默认值输出字段。")]),t._v(" "),o("li",[o("strong",[t._v("忽略未知字段")]),t._v("：Proto3 JSON 解析器默认应该拒绝未知字段，但可能会提供一个选项来忽略解析中的未知字段。")]),t._v(" "),o("li",[o("strong",[t._v("使用 proto 字段名称而不是 lowerCamelCase 名称")]),t._v("：默认情况下，proto3 JSON 打印机应将字段名称转换为 lowerCamelCase 并将其用作 JSON 名称。实现可能会提供一个选项来使用 proto 字段名称作为 JSON 名称。Proto3 JSON 解析器需要接受转换后的 lowerCamelCase 名称和 proto 字段名称。")]),t._v(" "),o("li",[o("strong",[t._v("将枚举值作为整数而不是字符串发出")]),t._v("：默认情况下，在 JSON 输出中使用枚举值的名称。可以提供一个选项来代替使用枚举值的数值。")])]),t._v(" "),o("h2",{attrs:{id:"十五、option"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十五、option"}},[t._v("#")]),t._v(" 十五、option")]),t._v(" "),o("p",[t._v("文件中的各个声明"),o("code",[t._v(".proto")]),t._v("可以用许多"),o("em",[t._v("选项")]),t._v("进行注释。选项不会改变声明的整体含义，但可能会影响它在特定上下文中的处理方式。可用选项的完整列表在 中定义"),o("code",[t._v("google/protobuf/descriptor.proto")]),t._v("。")]),t._v(" "),o("p",[t._v("一些选项是文件级选项，这意味着它们应该在顶级范围内编写，而不是在任何消息、枚举或服务定义中。一些选项是消息级别的选项，这意味着它们应该写在消息定义中。一些选项是字段级选项，这意味着它们应该写在字段定义中。选项也可以写在枚举类型、枚举值、oneof字段、服务类型、服务方法上；但是，目前不存在任何有用的选项。")]),t._v(" "),o("p",[t._v("以下是一些最常用的选项：")]),t._v(" "),o("ul",[o("li",[o("p",[o("code",[t._v("java_package")]),t._v("（文件选项）：要用于生成的 Java/Kotlin 类的包。如果文件中没有给出明确"),o("code",[t._v("java_package")]),t._v("的选项"),o("code",[t._v(".proto")]),t._v("，那么默认情况下将使用 proto 包（使用文件中的“package”关键字指定"),o("code",[t._v(".proto")]),t._v("）。但是，proto 包通常不能制作好的 Java 包，因为不期望 proto 包以反向域名开头。如果不生成 Java 或 Kotlin 代码，则此选项无效。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('option java_package = "com.example.foo";\n')])])])]),t._v(" "),o("li",[o("p",[o("code",[t._v("java_outer_classname")]),t._v("（文件选项）：您要生成的包装 Java 类的类名（以及文件名）。如果文件中没有明确"),o("code",[t._v("java_outer_classname")]),t._v("指定，"),o("code",[t._v(".proto")]),t._v("则将通过将"),o("code",[t._v(".proto")]),t._v("文件名转换为驼峰式来构造类名（因此"),o("code",[t._v("foo_bar.proto")]),t._v("变为"),o("code",[t._v("FooBar.java")]),t._v("）。如果该"),o("code",[t._v("java_multiple_files")]),t._v("选项被禁用，那么所有其他类/枚举/等。为文件生成的"),o("code",[t._v(".proto")]),t._v("文件将"),o("em",[t._v("在")]),t._v("这个外部包装 Java 类中生成为嵌套类/枚举/等。如果不生成 Java 代码，则此选项无效。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v('option java_outer_classname = "Ponycopter";\n')])])])]),t._v(" "),o("li",[o("p",[o("code",[t._v("java_multiple_files")]),t._v("（文件选项）：如果为 false，则只会"),o("code",[t._v(".java")]),t._v("为此文件生成一个"),o("code",[t._v(".proto")]),t._v("文件，以及所有 Java 类/枚举/等。为顶级消息、服务和枚举生成的将嵌套在外部类中（请参阅 参考资料"),o("code",[t._v("java_outer_classname")]),t._v("）。如果为 true，"),o("code",[t._v(".java")]),t._v("将为每个 Java 类/枚举/等生成单独的文件。为顶级消息、服务和枚举生成，并且为此"),o("code",[t._v(".proto")]),t._v("文件生成的包装 Java 类将不包含任何嵌套类/枚举/等。这是一个布尔选项，默认为"),o("code",[t._v("false")]),t._v(". 如果不生成 Java 代码，则此选项无效。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("option java_multiple_files = true;\n")])])])]),t._v(" "),o("li",[o("p",[o("code",[t._v("optimize_for")]),t._v("（文件选项）：可以设置为"),o("code",[t._v("SPEED")]),t._v("、"),o("code",[t._v("CODE_SIZE")]),t._v("或"),o("code",[t._v("LITE_RUNTIME")]),t._v("。这会通过以下方式影响 C++ 和 Java 代码生成器（可能还有第三方生成器）：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("SPEED")]),t._v("（默认）：protocol buffer 编译器将生成用于对消息类型进行序列化、解析和执行其他常见操作的代码。这段代码是高度优化的。")]),t._v(" "),o("li",[o("code",[t._v("CODE_SIZE")]),t._v("：protocol buffer 编译器将生成最少的类，并将依赖共享的、基于反射的代码来实现序列化、解析和各种其他操作。因此生成的代码将比 with 小得多"),o("code",[t._v("SPEED")]),t._v("，但操作会更慢。类仍将实现与模式中完全相同的公共 API "),o("code",[t._v("SPEED")]),t._v("。这种模式在包含大量"),o("code",[t._v(".proto")]),t._v("文件并且不需要所有文件都非常快的应用程序中最有用。")]),t._v(" "),o("li",[o("code",[t._v("LITE_RUNTIME")]),t._v("：协议缓冲区编译器将生成仅依赖于“lite”运行时库（"),o("code",[t._v("libprotobuf-lite")]),t._v("而不是"),o("code",[t._v("libprotobuf")]),t._v("）的类。lite 运行时比完整库小得多（大约小一个数量级），但省略了描述符和反射等某些功能。这对于在手机等受限平台上运行的应用程序特别有用。编译器仍将生成所有方法的快速实现，就像它在"),o("code",[t._v("SPEED")]),t._v("模式中所做的那样。生成的类只会实现"),o("code",[t._v("MessageLite")]),t._v("每种语言的接口，它只提供完整"),o("code",[t._v("Message")]),t._v("接口方法的子集。")])]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("option optimize_for = CODE_SIZE;\n")])])])]),t._v(" "),o("li",[o("p",[o("code",[t._v("cc_enable_arenas")]),t._v("（文件选项）：为 C++ 生成的代码启用"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/arenas",target:"_blank",rel:"noopener noreferrer"}},[t._v("竞技场分配。"),o("OutboundLink")],1)])]),t._v(" "),o("li",[o("p",[o("code",[t._v("objc_class_prefix")]),t._v("（文件选项）：设置 Objective-C 类前缀，该前缀添加到所有来自此 .proto 的 Objective-C 生成的类和枚举中。没有默认值。"),o("a",{attrs:{href:"https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Conventions/Conventions.html#//apple_ref/doc/uid/TP40011210-CH10-SW4",target:"_blank",rel:"noopener noreferrer"}},[t._v("您应该使用Apple 推荐的"),o("OutboundLink")],1),t._v("介于 3-5 个大写字符之间的前缀。请注意，所有 2 个字母前缀均由 Apple 保留。")])]),t._v(" "),o("li",[o("p",[o("code",[t._v("deprecated")]),t._v("（字段选项）：如果设置为"),o("code",[t._v("true")]),t._v("，则表示该字段已弃用，不应被新代码使用。在大多数语言中，这没有实际效果。在 Java 中，这成为"),o("code",[t._v("@Deprecated")]),t._v("注解。将来，其他特定于语言的代码生成器可能会在字段的访问器上生成弃用注释，这反过来会导致在编译尝试使用该字段的代码时发出警告。如果该字段未被任何人使用并且您希望阻止新用户使用它，请考虑将字段声明替换为"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto3#reserved",target:"_blank",rel:"noopener noreferrer"}},[t._v("保留"),o("OutboundLink")],1),t._v("语句。")]),t._v(" "),o("div",{staticClass:"language-proto extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[t._v("int32 old_field = 6 [deprecated = true];\n")])])])])]),t._v(" "),o("h3",{attrs:{id:"自定义选项"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#自定义选项"}},[t._v("#")]),t._v(" 自定义选项")]),t._v(" "),o("p",[t._v("Protocol Buffers 还允许您定义和使用自己的选项。这是大多数人不需要的**高级功能。**如果您确实认为需要创建自己的选项，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto#customoptions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Proto2 语言指南"),o("OutboundLink")],1),t._v("了解详细信息。请注意，创建自定义选项使用"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto#extensions",target:"_blank",rel:"noopener noreferrer"}},[t._v("extensions"),o("OutboundLink")],1),t._v("，这仅允许用于 proto3 中的自定义选项。")]),t._v(" "),o("h2",{attrs:{id:"十六、生成你的类"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#十六、生成你的类"}},[t._v("#")]),t._v(" 十六、生成你的类")]),t._v(" "),o("p",[t._v("要生成需要使用"),o("code",[t._v(".proto")]),t._v("文件中定义的消息类型的 Java、Kotlin、Python、C++、Go、Ruby、Objective-C 或 C# 代码，您需要"),o("code",[t._v("protoc")]),t._v("在"),o("code",[t._v(".proto")]),t._v(". 如果您尚未安装编译器，请"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载软件包"),o("OutboundLink")],1),t._v("并按照 README 中的说明进行操作。对于 Go，您还需要为编译器安装一个特殊的代码生成器插件：您可以在 GitHub 上的"),o("a",{attrs:{href:"https://github.com/golang/protobuf/",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang/protobuf存储库中找到此插件和安装说明。"),o("OutboundLink")],1)]),t._v(" "),o("p",[t._v("协议编译器调用如下：")]),t._v(" "),o("div",{staticClass:"language-sh extra-class"},[o("pre",{pre:!0,attrs:{class:"language-sh"}},[o("code",[t._v("protoc --proto_path"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("IMPORT_PATH --cpp_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --java_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --python_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --go_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --ruby_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --objc_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR --csharp_out"),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DST_DIR path/to/file.proto\n")])])]),o("ul",[o("li",[o("p",[o("code",[t._v("IMPORT_PATH")]),t._v("指定"),o("code",[t._v(".proto")]),t._v("解析"),o("code",[t._v("import")]),t._v("指令时在其中查找文件的目录。如果省略，则使用当前目录。"),o("code",[t._v("--proto_path")]),t._v("多次传递该选项可以指定多个导入目录；他们将被按顺序搜索。"),o("code",[t._v("-I=_IMPORT_PATH_")]),t._v("可以用作 的简写形式"),o("code",[t._v("--proto_path")]),t._v("。")])]),t._v(" "),o("li",[o("p",[t._v("您可以提供一个或多个"),o("em",[t._v("输出指令")]),t._v("：")]),t._v(" "),o("ul",[o("li",[o("code",[t._v("--cpp_out")]),t._v("生成 C++ 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/cpp-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--java_out")]),t._v("生成 Java 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/java-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--kotlin_out")]),t._v("在"),o("code",[t._v("DST_DIR")]),t._v(". 有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/kotlin-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kotlin 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--python_out")]),t._v("生成 Python 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/python-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--go_out")]),t._v("生成 Go 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/go-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--ruby_out")]),t._v("生成 Ruby 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/ruby-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ruby 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--objc_out")]),t._v("在"),o("code",[t._v("DST_DIR")]),t._v(". 有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/objective-c-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--csharp_out")]),t._v("生成 C# 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/csharp-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("C# 生成的代码参考"),o("OutboundLink")],1),t._v("。")]),t._v(" "),o("li",[o("code",[t._v("--php_out")]),t._v("生成 PHP 代码"),o("code",[t._v("DST_DIR")]),t._v("。有关更多信息，请参阅"),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/php-generated",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP 生成的代码参考"),o("OutboundLink")],1),t._v("。")])]),t._v(" "),o("p",[t._v("作为额外的便利，如果以or"),o("code",[t._v("DST_DIR")]),t._v("结尾，编译器会将输出写入具有给定名称的单个 ZIP 格式存档文件。输出也将按照 Java JAR 规范的要求提供一个清单文件。请注意，如果输出存档已经存在，它将被覆盖；编译器不够聪明，无法将文件添加到现有存档中。"),o("code",[t._v(".zip``.jar``.jar")])])]),t._v(" "),o("li",[o("p",[t._v("您必须提供一个或多个"),o("code",[t._v(".proto")]),t._v("文件作为输入。"),o("code",[t._v(".proto")]),t._v("可以一次指定多个文件。尽管文件是相对于当前目录命名的，但每个文件都必须位于其中一个"),o("code",[t._v("IMPORT_PATH")]),t._v("s 中，以便编译器可以确定其规范名称。")])])]),t._v(" "),o("h2",{attrs:{id:"参考"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),o("ul",[o("li",[t._v("https://developers.google.com/protocol-buffers/docs/proto3")])])])}),[],!1,null,null,null);e.default=v.exports}}]);