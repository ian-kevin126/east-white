(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{658:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"grpc教程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grpc教程"}},[t._v("#")]),t._v(" gRPC教程")]),t._v(" "),a("h2",{attrs:{id:"_1-什么是微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是微服务"}},[t._v("#")]),t._v(" 1. 什么是微服务")]),t._v(" "),a("h3",{attrs:{id:"_1-1-单体架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-单体架构"}},[t._v("#")]),t._v(" 1.1 单体架构")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220422225410288.png",alt:"image-20220422225410288"}})]),t._v(" "),a("p",[t._v("有一些致命缺点：")]),t._v(" "),a("ol",[a("li",[t._v("一旦某个服务宕机，会引起整个应用不可用，隔离性差")]),t._v(" "),a("li",[t._v("只能整体应用进行伸缩，浪费资源，可伸缩性差")]),t._v(" "),a("li",[t._v("代码耦合在一起，可维护性差")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-微服务架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-微服务架构"}},[t._v("#")]),t._v(" 1.2 微服务架构")]),t._v(" "),a("p",[t._v("要想解决上述的单体架构的问题，就需要将服务拆分出来，单独管理和维护。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220422231420347.png",alt:"image-20220422231420347"}})]),t._v(" "),a("p",[t._v("通过上述的架构，解决了单体架构的弊端。")]),t._v(" "),a("p",[t._v("但同时引入了新的问题：")]),t._v(" "),a("ol",[a("li",[t._v("代码冗余")]),t._v(" "),a("li",[t._v("服务和服务之间存在调用关系")])]),t._v(" "),a("h4",{attrs:{id:"_1-2-1-代码冗余问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-代码冗余问题"}},[t._v("#")]),t._v(" 1.2.1 代码冗余问题")]),t._v(" "),a("blockquote",[a("p",[t._v("服务未拆分之前，公共的功能有统一的实现，比如认证，授权，限流等，但是服务拆分之后，每一个服务可能都需要实现一遍")])]),t._v(" "),a("p",[t._v("解决方案：")]),t._v(" "),a("ol",[a("li",[t._v("由于为了保持对外提供服务的一致性，引入了网关的概念，由网关根据不同的请求，将其转发到不同的服务（路由功能），由于入口的一致性，可以在网关上实现公共的一些功能")]),t._v(" "),a("li",[t._v("可以将公共的功能抽取出来，形成一个新的服务，比如统一认证中心")])]),t._v(" "),a("h4",{attrs:{id:"_1-2-2-服务之间调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-服务之间调用"}},[t._v("#")]),t._v(" 1.2.2 服务之间调用")]),t._v(" "),a("p",[t._v("服务拆分后，服务和服务之间发生的是进程和进程之间的调用，服务器和服务器之间的调用。")]),t._v(" "),a("p",[t._v("那么就需要发起网络调用，网络调用我们能立马想起的就是http，但是在微服务架构中，http虽然便捷方便，但性能较低，这时候就需要引入RPC（远程过程调用），通过自定义协议发起TCP调用，来加快传输效率。")]),t._v(" "),a("blockquote",[a("p",[t._v("每个服务由于可能分布在成千上百台机器上，服务和服务之间的调用，会出现一些问题，比如，如何知道应该调用哪台机器上的服务，调用方可能需要维护被调用方的地址，这个地址可能很多，增加了额外的负担，这时候就需要引入服务治理.")])]),t._v(" "),a("p",[t._v("服务治理中有一个重要的概念"),a("code",[t._v("服务发现")]),t._v("，服务发现中有一个重要的概念叫做"),a("code",[t._v("注册中心")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220422233632635.png",alt:"image-20220422233632635"}})]),t._v(" "),a("p",[t._v("每个服务启动的时候，会将自身的服务和ip注册到注册中心，其他服务调用的时候，只需要向注册中心申请地址即可。")]),t._v(" "),a("blockquote",[a("p",[t._v("当然，服务和服务之间调用会发生一些问题，为了避免产生连锁的雪崩反应，引入了服务容错，为了追踪一个调用所经过的服务，引入了链路追踪，等等这些就构建了一个微服务的生态")])]),t._v(" "),a("h2",{attrs:{id:"_2-grpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-grpc"}},[t._v("#")]),t._v(" 2. gRPC")]),t._v(" "),a("blockquote",[a("p",[t._v("上面我们讲到，服务和服务之间调用需要使用RPC，"),a("code",[t._v("gRPC")]),t._v("是一款"),a("strong",[t._v("语言中立")]),t._v("、"),a("strong",[t._v("平台中立")]),t._v("、开源的远程过程调用系统，"),a("code",[t._v("gRPC")]),t._v("客户端和服务端可以在多种环境中运行和交互，例如用"),a("code",[t._v("java")]),t._v("写一个服务端，可以用"),a("code",[t._v("go")]),t._v("语言写客户端调用")])]),t._v(" "),a("p",[t._v("数据在进行网络传输的时候，需要进行序列化，序列化协议有很多种，比如xml, json，protobuf等")]),t._v(" "),a("p",[t._v("gRPC默认使用"),a("code",[t._v("protocol buffers")]),t._v("，这是google开源的一套成熟的结构数据序列化机制。")]),t._v(" "),a("p",[t._v("在学习gRPC之前，需要先了解"),a("code",[t._v("protocol buffers")])]),t._v(" "),a("p",[a("strong",[t._v("序列化")]),t._v("：将数据结构或对象转换成二进制串的过程。")]),t._v(" "),a("p",[a("strong",[t._v("反序列化")]),t._v("：将在序列化过程中所产生的二进制串转换成数据结构或对象的过程。")]),t._v(" "),a("h2",{attrs:{id:"_3-protobuf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-protobuf"}},[t._v("#")]),t._v(" 3. protobuf")]),t._v(" "),a("p",[t._v("protobuf是谷歌开源的一种数据格式，适合高性能，对响应速度有要求的数据传输场景。因为profobuf是二进制数据格式，需要编码和解码。数据本身不具有可读性。因此只能反序列化之后得到真正可读的数据。")]),t._v(" "),a("p",[t._v("优势：")]),t._v(" "),a("ol",[a("li",[t._v("序列化后体积相比Json和XML很小，适合网络传输")]),t._v(" "),a("li",[t._v("支持跨平台多语言")]),t._v(" "),a("li",[t._v("消息格式升级和兼容性还不错")]),t._v(" "),a("li",[t._v("序列化反序列化速度很快")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-安装"}},[t._v("#")]),t._v(" 3.1 安装")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一步：下载通用编译器")]),t._v(" "),a("p",[t._v("地址：https://github.com/protocolbuffers/protobuf/releases")]),t._v(" "),a("p",[t._v("根据不同的操作系统，下载不同的包，解压出来是"),a("code",[t._v("protoc.exe")])])]),t._v(" "),a("li",[a("p",[t._v("第二步：配置环境变量")])]),t._v(" "),a("li",[a("p",[t._v("第三步：安装go专用的protoc的生成器")])])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" get github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("golang"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("protobuf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("protoc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("gen"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n")])])]),a("p",[t._v("安装后会在"),a("code",[t._v("GOPATH")]),t._v("目录下生成可执行文件，protobuf的编译器插件"),a("code",[t._v("protoc-gen-go")]),t._v("，执行"),a("code",[t._v("protoc")]),t._v("命令会自动调用这个插件")]),t._v(" "),a("blockquote",[a("p",[t._v("如何使用protobuf呢？")])]),t._v(" "),a("ol",[a("li",[t._v("定义了一种源文件，扩展名为 "),a("code",[t._v(".proto")]),t._v("，使用这种源文件，可以定义存储类的内容(消息类型)")]),t._v(" "),a("li",[t._v("protobuf有自己的编译器 "),a("code",[t._v("protoc")]),t._v("，可以将 "),a("code",[t._v(".proto")]),t._v(" 编译成对应语言的文件，就可以进行使用了")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-hello-world"}},[t._v("#")]),t._v(" 3.2 hello world")]),t._v(" "),a("blockquote",[a("p",[t._v("假设，我们现在需要传输用户信息，其中有username和age两个字段")])]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定的当前proto语法的版本，有2和3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("syntax")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proto3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//option go_package = "path;name"; ath 表示生成的go文件的存放地址，会自动生成目录的')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name 表示生成的go文件所属的包名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),t._v(" go_package"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../service"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定等会文件生成出来的package")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[a("strong",[t._v("运行protoc命令编译成go中间文件")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("# 编译user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proto之后输出到service文件夹\nprotoc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("go_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("service user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proto\n")])])]),a("p",[a("strong",[t._v("测试")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google.golang.org/protobuf/proto"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testProto/service"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tuser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tUsername"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mszlu"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tAge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为protobuf")]),t._v("\n\tmarshal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" proto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Marshal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tnewUser "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("User"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\terr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" proto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Unmarshal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("marshal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newUser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_3-3-proto文件介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-proto文件介绍"}},[t._v("#")]),t._v(" 3.3 proto文件介绍")]),t._v(" "),a("h4",{attrs:{id:"_3-3-1-message介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-message介绍"}},[t._v("#")]),t._v(" 3.3.1 message介绍")]),t._v(" "),a("p",[a("code",[t._v("message")]),t._v("："),a("code",[t._v("protobuf")]),t._v("中定义一个消息类型是通过关键字"),a("code",[t._v("message")]),t._v("字段指定的。")]),t._v(" "),a("p",[t._v("消息就是需要传输的数据格式的定义。")]),t._v(" "),a("p",[t._v("message关键字类似于C++中的class，Java中的class，go中的struct")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在消息中承载的数据分别对应于每一个字段。")]),t._v(" "),a("p",[t._v("其中每个字段都有一个名字和一种类型  。")]),t._v(" "),a("h4",{attrs:{id:"_3-3-2-字段规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-字段规则"}},[t._v("#")]),t._v(" 3.3.2 字段规则")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("required")]),t._v(":消息体中必填字段，不设置会导致编解码异常。（例如位置1）")]),t._v(" "),a("li",[a("code",[t._v("optional")]),t._v(": 消息体中可选字段。（例如位置2）")]),t._v(" "),a("li",[a("code",[t._v("repeated")]),t._v(": 消息体中可重复字段，重复的值的顺序会被保留（例如位置3）在go中重复的会被定义为切片。")])]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("optional")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-3-字段映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-字段映射"}},[t._v("#")]),t._v(" 3.3.3 字段映射")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v(".proto Type")])]),t._v(" "),a("th",[a("strong",[t._v("Notes")])]),t._v(" "),a("th",[a("strong",[t._v("C++ Type")])]),t._v(" "),a("th",[a("strong",[t._v("Python Type")])]),t._v(" "),a("th",[a("strong",[t._v("Go Type")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("double")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("double")]),t._v(" "),a("td",[t._v("float")]),t._v(" "),a("td",[t._v("float64")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("float")]),t._v(" "),a("td",[t._v("float")]),t._v(" "),a("td",[t._v("float32")])]),t._v(" "),a("tr",[a("td",[t._v("int32")]),t._v(" "),a("td",[t._v("使用变长编码，对于负值的效率很低，如果你的域有 可能有负值，请使用sint64替代")]),t._v(" "),a("td",[t._v("int32")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("int32")])]),t._v(" "),a("tr",[a("td",[t._v("uint32")]),t._v(" "),a("td",[t._v("使用变长编码")]),t._v(" "),a("td",[t._v("uint32")]),t._v(" "),a("td",[t._v("int/long")]),t._v(" "),a("td",[t._v("uint32")])]),t._v(" "),a("tr",[a("td",[t._v("uint64")]),t._v(" "),a("td",[t._v("使用变长编码")]),t._v(" "),a("td",[t._v("uint64")]),t._v(" "),a("td",[t._v("int/long")]),t._v(" "),a("td",[t._v("uint64")])]),t._v(" "),a("tr",[a("td",[t._v("sint32")]),t._v(" "),a("td",[t._v("使用变长编码，这些编码在负值时比int32高效的多")]),t._v(" "),a("td",[t._v("int32")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("int32")])]),t._v(" "),a("tr",[a("td",[t._v("sint64")]),t._v(" "),a("td",[t._v("使用变长编码，有符号的整型值。编码时比通常的 int64高效。")]),t._v(" "),a("td",[t._v("int64")]),t._v(" "),a("td",[t._v("int/long")]),t._v(" "),a("td",[t._v("int64")])]),t._v(" "),a("tr",[a("td",[t._v("fixed32")]),t._v(" "),a("td",[t._v("总是4个字节，如果数值总是比总是比228大的话，这 个类型会比uint32高效。")]),t._v(" "),a("td",[t._v("uint32")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("uint32")])]),t._v(" "),a("tr",[a("td",[t._v("fixed64")]),t._v(" "),a("td",[t._v("总是8个字节，如果数值总是比总是比256大的话，这 个类型会比uint64高效。")]),t._v(" "),a("td",[t._v("uint64")]),t._v(" "),a("td",[t._v("int/long")]),t._v(" "),a("td",[t._v("uint64")])]),t._v(" "),a("tr",[a("td",[t._v("sfixed32")]),t._v(" "),a("td",[t._v("总是4个字节")]),t._v(" "),a("td",[t._v("int32")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("int32")])]),t._v(" "),a("tr",[a("td",[t._v("sfixed32")]),t._v(" "),a("td",[t._v("总是4个字节")]),t._v(" "),a("td",[t._v("int32")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("int32")])]),t._v(" "),a("tr",[a("td",[t._v("sfixed64")]),t._v(" "),a("td",[t._v("总是8个字节")]),t._v(" "),a("td",[t._v("int64")]),t._v(" "),a("td",[t._v("int/long")]),t._v(" "),a("td",[t._v("int64")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("bool")]),t._v(" "),a("td",[t._v("bool")]),t._v(" "),a("td",[t._v("bool")])]),t._v(" "),a("tr",[a("td",[t._v("string")]),t._v(" "),a("td",[t._v("一个字符串必须是UTF-8编码或者7-bit ASCII编码的文 本。")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("str/unicode")]),t._v(" "),a("td",[t._v("string")])]),t._v(" "),a("tr",[a("td",[t._v("bytes")]),t._v(" "),a("td",[t._v("可能包含任意顺序的字节数据。")]),t._v(" "),a("td",[t._v("string")]),t._v(" "),a("td",[t._v("str")]),t._v(" "),a("td",[t._v("[]byte")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-3-4-默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-默认值"}},[t._v("#")]),t._v(" 3.3.4 默认值")]),t._v(" "),a("p",[t._v("protobuf3 删除了 protobuf2 中用来设置默认值的 default 关键字，取而代之的是protobuf3为各类型定义的默认值，也就是约定的默认值，如下表所示：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('空字符串""')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("枚举enum")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第一个枚举元素的值，因为Protobuf3强制要求第一个枚举元素的值必须是0，所以枚举的默认值就是0；")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("message")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不是null，而是DEFAULT_INSTANCE")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-3-5-标识号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-标识号"}},[t._v("#")]),t._v(" 3.3.5 标识号")]),t._v(" "),a("p",[a("code",[t._v("标识号")]),t._v("：在消息体的定义中，每个字段都必须要有一个唯一的标识号，标识号是[0,2^29-1]范围内的一个整数。")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (位置1)")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("optional")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" phones "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (位置4)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("以Person为例，name=1，id=2, email=3, phones=4 中的1-4就是标识号。")]),t._v(" "),a("h4",{attrs:{id:"_3-3-6-定义多个消息类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-定义多个消息类型"}},[t._v("#")]),t._v(" 3.3.6 定义多个消息类型")]),t._v(" "),a("p",[t._v("一个proto文件中可以定义多个消息类型")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("message UserRequest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  optional "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  repeated "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nmessage UserResponse "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" username "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  optional "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" password "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  repeated "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-7-嵌套消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-嵌套消息"}},[t._v("#")]),t._v(" 3.3.7 嵌套消息")]),t._v(" "),a("p",[t._v("可以在其他消息类型中定义、使用消息类型，在下面的例子中，Person消息就定义在PersonInfo消息内，如  ：")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" height "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" weight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("Person")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果你想在它的父消息类型的外部重用这个消息类型，你需要以PersonInfo.Person的形式使用它，如：")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonMessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("PersonInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Person")]),t._v(" info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当然，你也可以将消息嵌套任意多层，如 :")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Grandpa")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("son")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 2")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uncle")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 1")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 2")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-8-定义服务-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-8-定义服务-service"}},[t._v("#")]),t._v(" 3.3.8 定义服务(Service)")]),t._v(" "),a("p",[t._v("如果想要将消息类型用在RPC系统中，可以在.proto文件中定义一个RPC服务接口，protocol buffer 编译器将会根据所选择的不同语言生成服务接口代码及存根。")]),t._v(" "),a("div",{staticClass:"language-protobuf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-protobuf"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("service")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//rpc 服务的函数名 （传入参数）返回（返回参数）")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rpc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Search")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上述代表表示，定义了一个RPC服务，该方法接收SearchRequest返回SearchResponse")]),t._v(" "),a("h2",{attrs:{id:"_4-grpc实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-grpc实例"}},[t._v("#")]),t._v(" 4. gRPC实例")]),t._v(" "),a("h3",{attrs:{id:"_4-1-rpc和grpc介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-rpc和grpc介绍"}},[t._v("#")]),t._v(" 4.1 RPC和gRPC介绍")]),t._v(" "),a("p",[t._v("RPC（Remote Procedure Call）远程过程调用协议，一种通过网络从远程计算机上请求服务，而不需要了解底层网络技术的协议。RPC它假定某些协议的存在，例如TCP/UDP等，为通信程序之间携带信息数据。在OSI网络七层模型中，RPC跨越了传输层和应用层，RPC使得开发包括网络分布式多程序在内的应用程序更加容易。")]),t._v(" "),a("p",[t._v("过程是什么？ 过程就是业务处理、计算任务，更直白的说，就是程序，就是像调用本地方法一样调用远程的过程")]),t._v(" "),a("p",[t._v("RPC采用客户端/服务端的模式，通过request-response消息模式实现")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220424111303405.png",alt:"image-20220424111303405"}})]),t._v(" "),a("p",[t._v("gRPC 里"),a("em",[t._v("客户端")]),t._v("应用可以像调用本地对象一样直接调用另一台不同的机器上"),a("em",[t._v("服务端")]),t._v("应用的方法，使得您能够更容易地创建分布式应用和服务。与许多 RPC 系统类似，gRPC 也是基于以下理念：定义一个"),a("em",[t._v("服务")]),t._v("，指定其能够被远程调用的方法（包含参数和返回类型）。在服务端实现这个接口，并运行一个 gRPC 服务器来处理客户端调用。在客户端拥有一个"),a("em",[t._v("存根")]),t._v("能够像服务端一样的方法。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220424111455580.png",alt:"image-20220424111455580"}})]),t._v(" "),a("p",[t._v("官方网站：https://grpc.io/")]),t._v(" "),a("p",[t._v("底层协议：")]),t._v(" "),a("ul",[a("li",[t._v("HTTP2: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md")]),t._v(" "),a("li",[t._v("GRPC-WEB ： https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-WEB.md")])]),t._v(" "),a("h4",{attrs:{id:"_4-1-1-http2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-http2"}},[t._v("#")]),t._v(" 4.1.1 HTTP2")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://ian-kevin.oss-cn-beijing.aliyuncs.com/img/image-20220424112609954.png",alt:"image-20220424112609954"}})]),t._v(" "),a("ul",[a("li",[t._v("HTTP/1里的header对应HTTP/2里的 HEADERS frame")]),t._v(" "),a("li",[t._v("HTTP/1里的payload对应HTTP/2里的 DATA frame")])]),t._v(" "),a("p",[t._v("gGRPC把元数据放到HTTP/2 Headers里，请求参数序列化之后放到 DATA frame里")]),t._v(" "),a("p",[a("strong",[t._v("基于HTTP/2 协议的优点")])]),t._v(" "),a("ol",[a("li",[t._v("公开标准")]),t._v(" "),a("li",[t._v("HTTP/2的前身是Google的"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/SPDY",target:"_blank",rel:"noopener noreferrer"}},[t._v("SPDY"),a("OutboundLink")],1),t._v(" ，有经过实践检验")]),t._v(" "),a("li",[t._v("HTTP/2 天然支持物联网、手机、浏览器")]),t._v(" "),a("li",[t._v("基于HTTP/2 多语言客户端实现容易\n"),a("ol",[a("li",[t._v("每个流行的编程语言都会有成熟的HTTP/2 Client")]),t._v(" "),a("li",[t._v("HTTP/2 Client是经过充分测试，可靠的")]),t._v(" "),a("li",[t._v("用Client发送HTTP/2请求的难度远低于用socket发送数据包/解析数据包")])])]),t._v(" "),a("li",[t._v("HTTP/2支持Stream和流控")]),t._v(" "),a("li",[t._v("基于HTTP/2 在Gateway/Proxy很容易支持\n"),a("ol",[a("li",[t._v("nginx和envoy都有支持")])])]),t._v(" "),a("li",[t._v("HTTP/2 安全性有保证\n"),a("ol",[a("li",[t._v("HTTP/2 天然支持SSL，当然gRPC可以跑在clear text协议（即不加密）上。")]),t._v(" "),a("li",[t._v("很多私有协议的rpc可能自己包装了一层TLS支持，使用起来也非常复杂。开发者是否有足够的安全知识？使用者是否配置对了？运维者是否能正确理解？")]),t._v(" "),a("li",[t._v("HTTP/2 在公有网络上的传输上有保证。比如这个"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/CRIME",target:"_blank",rel:"noopener noreferrer"}},[t._v("CRIME攻击"),a("OutboundLink")],1),t._v("，私有协议很难保证没有这样子的漏洞。")])])]),t._v(" "),a("li",[t._v("HTTP/2 鉴权成熟\n"),a("ol",[a("li",[t._v("从HTTP/1发展起来的鉴权系统已经很成熟了，可以无缝用在HTTP/2上")]),t._v(" "),a("li",[t._v("可以从前端到后端完全打通的鉴权，不需要做任何转换适配")])])])]),t._v(" "),a("p",[a("strong",[t._v("基于HTTP/2 协议的缺点")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("rpc的元数据的传输不够高效")]),t._v(" "),a("p",[t._v("尽管HPAC可以压缩HTTP Header，但是对于rpc来说，确定一个函数调用，可以简化为一个int，只要两端去协商过一次，后面直接查表就可以了，不需要像HPAC那样编码解码。\n可以考虑专门对gRPC做一个优化过的HTTP/2解析器，减少一些通用的处理，感觉可以提升性能。")])]),t._v(" "),a("li",[a("p",[t._v("HTTP/2 里一次gRPC调用需要解码两次")]),t._v(" "),a("p",[t._v("一次是HEADERS frame，一次是DATA frame。")])]),t._v(" "),a("li",[a("p",[t._v("HTTP/2 标准本身是只有一个TCP连接，但是实际在gRPC里是会有多个TCP连接，使用时需要注意。")])])]),t._v(" "),a("p",[t._v("gRPC选择基于HTTP/2，那么它的性能肯定不会是最顶尖的。但是对于rpc来说中庸的qps可以接受，通用和兼容性才是最重要的事情。")]),t._v(" "),a("ul",[a("li",[t._v("官方的benchmark：https://grpc.io/docs/guides/benchmarking.html")]),t._v(" "),a("li",[t._v("https://github.com/hank-whu/rpc-benchmark")])]),t._v(" "),a("p",[t._v("gRPC目前是k8s生态里的事实标准，而Kubernetes又是容器编排的事实标准。gRPC已经广泛应用于Istio体系，包括:")]),t._v(" "),a("ul",[a("li",[t._v("Envoy与Pilot(现在叫istiod)间的XDS协议")]),t._v(" "),a("li",[t._v("mixer的handler扩展协议")]),t._v(" "),a("li",[t._v("MCP(控制面的配置分发协议)")])]),t._v(" "),a("p",[t._v("在Cloud Native的潮流下，开放互通的需求必然会产生基于HTTP/2的RPC。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-实例"}},[t._v("#")]),t._v(" 4.2 实例")]),t._v(" "),a("h4",{attrs:{id:"_4-2-1-服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-服务端"}},[t._v("#")]),t._v(" 4.2.1 服务端")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个就是protobuf的中间文件")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定的当前proto语法的版本，有2和3")]),t._v("\nsyntax "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proto3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noption go_package"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"../service"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定等会文件生成出来的package")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义request model")]),t._v("\nmessage ProductRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" prod_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1代表顺序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义response model")]),t._v("\nmessage ProductResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" prod_stock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1代表顺序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义服务主体")]),t._v("\nservice ProdService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义方法")]),t._v("\n    rpc "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetProductStock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ProductRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ProductResponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("生成：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("protoc --go_out"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("grpc:./ ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("product.proto\n")])])]),a("p",[t._v("服务端：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google.golang.org/grpc"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tserver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tservice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("RegisterProdServiceServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProductService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\tlistener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tcp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8002"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"服务监听端口失败"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Serve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listener"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"_4-2-2-客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-客户端"}},[t._v("#")]),t._v(" 4.2.2 客户端")]),t._v(" "),a("p",[t._v("新建client目录，把上述生成的product.pb.go copy过来")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 新建连接，端口是服务端开放的8002端口")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有证书会报错")]),t._v("\n\tconn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Dial")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":8002"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grpc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("WithTransportCredentials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("insecure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewCredentials")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 退出时关闭链接")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 调用Product.pb.go中的NewProdServiceClient方法")]),t._v("\n\tproductServiceClient "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewProdServiceClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 直接像调用本地方法一样调用GetProductStock方法")]),t._v("\n\tresp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" productServiceClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetProductStock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProductRequest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ProdId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("233")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fatal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"调用gRPC方法错误: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"调用gRPC方法成功，ProdStock = "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProdStock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);