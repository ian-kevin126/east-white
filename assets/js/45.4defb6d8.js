(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{652:function(e,a,t){"use strict";t.r(a);var s=t(6),_=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"风格指南"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#风格指南"}},[e._v("#")]),e._v(" 风格指南")]),e._v(" "),t("p",[e._v("本文档提供了文件的样式指南"),t("code",[e._v(".proto")]),e._v("。通过遵循这些约定，您将使您的协议缓冲区消息定义及其相应的类一致且易于阅读。")]),e._v(" "),t("p",[e._v("请注意，协议缓冲区样式随着时间的推移而发展，因此您很可能会看到"),t("code",[e._v(".proto")]),e._v("以不同约定或样式编写的文件。修改这些文件时请尊重现有样式。"),t("strong",[e._v("一致性是关键")]),e._v("。但是，最好在创建新"),t("code",[e._v(".proto")]),e._v("文件时采用当前最佳样式。")]),e._v(" "),t("h2",{attrs:{id:"一、标准文件格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、标准文件格式"}},[e._v("#")]),e._v(" 一、标准文件格式")]),e._v(" "),t("ul",[t("li",[e._v("保持行长为 80 个字符。")]),e._v(" "),t("li",[e._v("使用 2 个空格的缩进。")]),e._v(" "),t("li",[e._v("更喜欢对字符串使用双引号。")])]),e._v(" "),t("h2",{attrs:{id:"二、文件结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、文件结构"}},[e._v("#")]),e._v(" 二、文件结构")]),e._v(" "),t("p",[e._v("文件应该命名"),t("code",[e._v("lower_snake_case.proto")])]),e._v(" "),t("p",[e._v("所有文件应按以下方式排序：")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("许可证标题（如果适用）")])]),e._v(" "),t("li",[t("p",[e._v("文件概览")])]),e._v(" "),t("li",[t("p",[e._v("句法")])]),e._v(" "),t("li",[t("p",[e._v("包裹")])]),e._v(" "),t("li",[t("p",[e._v("进口（排序）")])]),e._v(" "),t("li",[t("p",[e._v("文件选项")])]),e._v(" "),t("li",[t("p",[e._v("其他一切")])]),e._v(" "),t("li",[t("p",[e._v("License header (if applicable)")])]),e._v(" "),t("li",[t("p",[e._v("File overview")])]),e._v(" "),t("li",[t("p",[e._v("Syntax")])]),e._v(" "),t("li",[t("p",[e._v("Package")])]),e._v(" "),t("li",[t("p",[e._v("Imports (sorted)")])]),e._v(" "),t("li",[t("p",[e._v("File options")])]),e._v(" "),t("li",[t("p",[e._v("Everything else")])])]),e._v(" "),t("h2",{attrs:{id:"三、packages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、packages"}},[e._v("#")]),e._v(" 三、packages")]),e._v(" "),t("p",[e._v("包名应该是小写的。包名称应具有基于项目名称的唯一名称，并且可能基于包含协议缓冲区类型定义的文件的路径。")]),e._v(" "),t("h2",{attrs:{id:"四、message和字段名称"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、message和字段名称"}},[e._v("#")]),e._v(" 四、message和字段名称")]),e._v(" "),t("p",[e._v("使用 CamelCase（首字母大写）作为消息名称 - 例如，"),t("code",[e._v("SongServerRequest")]),e._v(". 使用 underscore_separated_names 作为字段名称（包括 oneof 字段和扩展名）——例如，"),t("code",[e._v("song_name")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("message SongServerRequest {\n  optional string song_name = 1;\n}\n")])])]),t("p",[e._v("对字段名称使用此命名约定可为您提供如下访问器：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("C++:\n  const string& song_name() { ... }\n  void set_song_name(const string& x) { ... }\n\nJava:\n  public String getSongName() { ... }\n  public Builder setSongName(String v) { ... }\n")])])]),t("p",[e._v("如果您的字段名称包含数字，则该数字应出现在字母之后而不是下划线之后。例如，使用"),t("code",[e._v("song_name1")]),e._v("代替"),t("code",[e._v("song_name_1")])]),e._v(" "),t("h2",{attrs:{id:"五、重复字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、重复字段"}},[e._v("#")]),e._v(" 五、重复字段")]),e._v(" "),t("p",[e._v("对重复的字段使用复数名称。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  repeated string keys = 1;\n  ...\n  repeated MyMessage accounts = 17;\n")])])]),t("h2",{attrs:{id:"六、枚举"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、枚举"}},[e._v("#")]),e._v(" 六、枚举")]),e._v(" "),t("p",[e._v("枚举类型名称使用 CamelCase（首字母大写），值名称使用 CAPITALS_WITH_UNDERSCORES：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("enum FooBar {\n  FOO_BAR_UNSPECIFIED = 0;\n  FOO_BAR_FIRST_VALUE = 1;\n  FOO_BAR_SECOND_VALUE = 2;\n}\n")])])]),t("p",[e._v("每个枚举值都应该以分号结尾，而不是逗号。更喜欢为枚举值添加前缀，而不是将它们包围在封闭的消息中。零值枚举应该有后缀"),t("code",[e._v("UNSPECIFIED")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"_7、服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、服务"}},[e._v("#")]),e._v(" 7、服务")]),e._v(" "),t("p",[e._v("如果您"),t("code",[e._v(".proto")]),e._v("定义了一个 RPC 服务，您应该使用 CamelCase（首字母大写）作为服务名称和任何 RPC 方法名称：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("service FooService {\n  rpc GetSomething(GetSomethingRequest) returns (GetSomethingResponse);\n  rpc ListSomething(ListSomethingRequest) returns (ListSomethingResponse);\n}\n")])])]),t("h2",{attrs:{id:"八、要避免的事情"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、要避免的事情"}},[e._v("#")]),e._v(" 八、要避免的事情")]),e._v(" "),t("ul",[t("li",[e._v("必填字段（仅适用于 proto2）")]),e._v(" "),t("li",[e._v("组（仅适用于 proto2）")])]),e._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考：")]),e._v(" "),t("ul",[t("li",[e._v("https://developers.google.com/protocol-buffers/docs/style")])])])}),[],!1,null,null,null);a.default=_.exports}}]);