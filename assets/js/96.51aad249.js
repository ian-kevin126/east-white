(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{704:function(t,s,a){"use strict";a.r(s);var r=a(6),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gopath"}},[t._v("#")]),t._v(" GOPATH")]),t._v(" "),a("p",[t._v("GOPATH 是 Go 语言中使用的一个环境变量，它使用绝对路径提供项目的工作目录。")]),t._v(" "),a("p",[t._v("工作目录是一个工程开发的相对参考目录，好比当你要在公司编写一套服务器代码，你的工位所包含的桌面、计算机及椅子就是你的工作区。工作区的概念与工作目录的概念也是类似的。如果不使用工作目录的概念，在多人开发时，每个人有一套自己的目录结构，读取配置文件的位置不统一，输出的二进制运行文件也不统一，这样会导致开发的标准不统一，影响开发效率。")]),t._v(" "),a("p",[t._v("GOPATH 适合处理大量 Go 语言源码、多个包组合而成的复杂工程。")]),t._v(" "),a("h2",{attrs:{id:"一、查看和设置-gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、查看和设置-gopath"}},[t._v("#")]),t._v(" 一、查看和设置 GOPATH")]),t._v(" "),a("p",[t._v("查看 Go 语言环境配置：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" env\n")])])]),a("p",[t._v("输出")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("GO111MODULE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on"')]),t._v("\nGOARCH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amd64"')]),t._v("\nGOBIN"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/bytedance/Documents/work_space/go_projects/bin"')]),t._v("\nGOCACHE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/bytedance/Library/Caches/go-build"')]),t._v("\nGOENV"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/bytedance/Library/Application Support/go/env"')]),t._v("\nGOEXE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOEXPERIMENT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOHOSTARCH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"amd64"')]),t._v("\nGOHOSTOS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"darwin"')]),t._v("\nGOINSECURE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOMODCACHE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/bytedance/go/pkg/mod"')]),t._v("\nGONOPROXY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.byted.org,*.everphoto.cn,git.smartisan.com"')]),t._v("\nGONOSUMDB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.byted.org,*.everphoto.cn,git.smartisan.com"')]),t._v("\nGOOS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"darwin"')]),t._v("\nGOPATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/Users/bytedance/go"')]),t._v("\nGOPRIVATE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.byted.org,*.everphoto.cn,git.smartisan.com"')]),t._v("\nGOPROXY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://goproxy.byted.org|https://goproxy.cn|direct"')]),t._v("\nGOROOT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/Cellar/go/1.18/libexec"')]),t._v("\nGOSUMDB"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sum.golang.google.cn"')]),t._v("\nGOTMPDIR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOTOOLDIR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/usr/local/Cellar/go/1.18/libexec/pkg/tool/darwin_amd64"')]),t._v("\nGOVCS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nGOVERSION"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go1.18"')]),t._v("\nGCCGO"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gccgo"')]),t._v("\nGOAMD64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),t._v("\nAR"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ar"')]),t._v("\nCC"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clang"')]),t._v("\nCXX"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clang++"')]),t._v("\nCGO_ENABLED"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\nGOMOD"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/null"')]),t._v("\nGOWORK"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nCGO_CFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g -O2"')]),t._v("\nCGO_CPPFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nCGO_CXXFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g -O2"')]),t._v("\nCGO_FFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g -O2"')]),t._v("\nCGO_LDFLAGS"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g -O2"')]),t._v("\nPKG_CONFIG"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkg-config"')]),t._v("\n")])])]),a("p",[t._v("命令行说明如下：")]),t._v(" "),a("ul",[a("li",[t._v("GOARCH 表示目标处理器架构。")]),t._v(" "),a("li",[t._v("GOBIN 表示编译器和链接器的安装位置。")]),t._v(" "),a("li",[t._v("GOOS 表示目标操作系统。")]),t._v(" "),a("li",[t._v("GOPATH 表示当前工作目录。")]),t._v(" "),a("li",[t._v("GOROOT 表示 Go 开发包的安装目录。")])]),t._v(" "),a("p",[t._v("在 Go 1.8 版本之前，GOPATH 环境变量默认是空的。从 Go 1.8 版本开始，Go 开发包在安装完成后，将 GOPATH 赋予了一个默认的目录，参见下表。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("平 台")]),t._v(" "),a("th",[t._v("GOPATH 默认值")]),t._v(" "),a("th",[t._v("举 例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Windows 平台")]),t._v(" "),a("td",[t._v("%USERPROFILE%/go")]),t._v(" "),a("td",[t._v("C:\\Users\\用户名\\go")])]),t._v(" "),a("tr",[a("td",[t._v("Unix 平台")]),t._v(" "),a("td",[t._v("$HOME/go")]),t._v(" "),a("td",[t._v("/home/用户名/go")])])])]),t._v(" "),a("h3",{attrs:{id:"_1、gopath-的工程结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、gopath-的工程结构"}},[t._v("#")]),t._v(" 1、GOPATH 的工程结构")]),t._v(" "),a("p",[t._v("在 GOPATH 指定的工作目录下，代码总是会保存在 $GOPATH/src 目录下。在工程经过 go build、go install 或 go get 等指令后，会将产生的二进制可执行文件放在 $GOPATH/bin 目录下，生成的中间缓存文件会被保存在 $GOPATH/pkg 下。")]),t._v(" "),a("p",[t._v("如果需要将整个源码添加到版本管理工具（Version Control System，VCS）中时，只需要添加 $GOPATH/src 目录的源码即可。bin 和 pkg 目录的内容都可以由 src 目录生成。")]),t._v(" "),a("h3",{attrs:{id:"_2、设置和使用-gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、设置和使用-gopath"}},[t._v("#")]),t._v(" 2、设置和使用 GOPATH")]),t._v(" "),a("p",[t._v("本节以 Linux 为演示平台，为大家演示使用 GOPATH 的方法。")]),t._v(" "),a("h4",{attrs:{id:"_1-设置当前目录为-gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置当前目录为-gopath"}},[t._v("#")]),t._v(" 1) 设置当前目录为 GOPATH")]),t._v(" "),a("p",[t._v("选择一个目录，在目录中的命令行中执行下面的指令：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("export GOPATH"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`pwd`")]),t._v("\n")])])]),a("p",[t._v("该指令中的 pwd 将输出当前的目录，使用反引号"),a("code",[t._v("将 pwd 指令括起来表示命令行替换，也就是说，使用`pwd`将获得 pwd 返回的当前目录的值。例如，假设你的当前目录是“/home/davy/go”，那么使用`pwd")]),t._v("将获得返回值“/home/davy/go”。")]),t._v(" "),a("p",[t._v("使用 export 指令可以将当前目录的值设置到环境变量 GOPATH 中。")]),t._v(" "),a("h4",{attrs:{id:"_2-建立-gopath-中的源码目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-建立-gopath-中的源码目录"}},[t._v("#")]),t._v(" 2) 建立 GOPATH 中的源码目录")]),t._v(" "),a("p",[t._v("使用下面的指令创建 GOPATH 中的 src 目录，在 src 目录下还有一个 hello 目录，该目录用于保存源码。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("mkdir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hello\n")])])]),a("p",[t._v("mkdir 指令的 -p 可以连续创建一个路径。")]),t._v(" "),a("h4",{attrs:{id:"_3-添加-main-go-源码文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-添加-main-go-源码文件"}},[t._v("#")]),t._v(" 3) 添加 main.go 源码文件")]),t._v(" "),a("p",[t._v("使用 Linux 编辑器将下面的源码保存为 main.go 并保存到 $GOPATH/src/hello 目录下。")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-编译源码并运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-编译源码并运行"}},[t._v("#")]),t._v(" 4) 编译源码并运行")]),t._v(" "),a("p",[t._v("此时我们已经设定了 GOPATH，因此在 Go 语言中可以通过 GOPATH 找到工程的位置。")]),t._v(" "),a("p",[t._v("在命令行中执行如下指令编译源码：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" install hello\n")])])]),a("p",[t._v("编译完成的可执行文件会保存在 $GOPATH/bin 目录下。")]),t._v(" "),a("p",[t._v("在 bin 目录中执行 ./hello，命令行输出如下：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("hello world\n")])])]),a("h3",{attrs:{id:"_3、在多项目工程中使用-gopath"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、在多项目工程中使用-gopath"}},[t._v("#")]),t._v(" 3、在多项目工程中使用 GOPATH")]),t._v(" "),a("p",[t._v("在很多与 Go 语言相关的书籍、文章中描述的 GOPATH 都是通过修改系统全局的环境变量来实现的。然而，根据笔者多年的 Go 语言使用和实践经验及周边朋友、同事的反馈，这种设置全局 GOPATH 的方法可能会导致当前项目错误引用了其他目录的 Go 源码文件从而造成编译输出错误的版本或编译报出一些无法理解的错误提示。")]),t._v(" "),a("p",[t._v("比如说，将某项目代码保存在 /home/davy/projectA 目录下，将该目录设置为 GOPATH。随着开发进行，需要再次获取一份工程项目的源码，此时源码保存在 /home/davy/projectB 目录下，如果此时需要编译 projectB 目录的项目，但开发者忘记设置 GOPATH 而直接使用命令行编译，则当前的 GOPATH 指向的是 /home/davy/projectA 目录，而不是开发者编译时期望的 projectB 目录。编译完成后，开发者就会将错误的工程版本发布到外网。")]),t._v(" "),a("p",[t._v("因此，建议大家无论是使用命令行或者使用集成开发环境编译 Go 源码时，GOPATH 跟随项目设定。在 Jetbrains 公司的 GoLand 集成开发环境（IDE）中的 GOPATH 设置分为全局 GOPATH 和项目 GOPATH。")]),t._v(" "),a("p",[t._v("Global GOPATH 代表全局 GOPATH，一般来源于系统环境变量中的 GOPATH；Project GOPATH 代表项目所使用的 GOPATH，该设置会被保存在工作目录的 .idea 目录下，不会被设置到环境变量的 GOPATH 中，但会在编译时使用到这个目录。建议在开发时只填写项目 GOPATH，每一个项目尽量只设置一个 GOPATH，不使用多个 GOPATH 和全局的 GOPATH。")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://c.biancheng.net/view/88.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go语言GOPATH"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);