(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{703:function(t,a,s){"use strict";s.r(a);var n=s(6),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"包的-import"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#包的-import"}},[t._v("#")]),t._v(" 包的 import")]),t._v(" "),s("p",[t._v("可以在一个 Go 语言源文件包声明语句之后，其它非导入声明语句之前，包含零到多个导入包声明语句。每个导入声明可以单独指定一个导入路径，也可以通过圆括号同时导入多个导入路径。要引用其他包的标识符，可以使用 import 关键字，导入的包名使用双引号包围，包名是从 GOPATH 开始计算的路径，使用"),s("code",[t._v("/")]),t._v("进行路径分隔。")]),t._v(" "),s("h2",{attrs:{id:"一、默认导入的写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、默认导入的写法"}},[t._v("#")]),t._v(" 一、默认导入的写法")]),t._v(" "),s("p",[t._v("导入有两种基本格式，即单行导入和多行导入，两种导入方法的导入代码效果是一致的。")]),t._v(" "),s("h2",{attrs:{id:"_1、单行导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、单行导入"}},[t._v("#")]),t._v(" 1、单行导入")]),t._v(" "),s("p",[t._v("单行导入格式如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包2"')]),t._v("\n")])])]),s("h2",{attrs:{id:"_2、多行导入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、多行导入"}},[t._v("#")]),t._v(" 2、多行导入")]),t._v(" "),s("p",[t._v("当多行导入时，包名在 import 中的顺序不影响导入效果，格式如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包1"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"包2"')]),t._v("\n  …\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("代码结构：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n└── src\n  └── chapter08\n    └── importadd\n      ├── main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n      └── mylib\n        └── add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v("\n")])])]),s("p",[t._v("加函数（具体文件：…/chapter08/importadd/mylib/add.go）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" mylib\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("第 3 行中的 Add() 函数以大写 A 开头，表示将 Add() 函数导出供包外使用。当首字母小写时，为包内使用，包外无法引用到。")]),t._v(" "),s("p",[t._v("add.go 在 mylib 文件夹下，习惯上将文件夹的命名与包名一致，命名为 mylib 包。")]),t._v(" "),s("p",[t._v("代码 8-2 　导入包（具体文件：…/chapter08/importadd/main.go）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chapter08/importadd/mylib"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mylib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("代码说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("第 4 行，导入 chapter08/importadd/mylib 包。")]),t._v(" "),s("li",[t._v("第 9 行，使用 mylib 作为包名，并引用 Add() 函数调用。")])]),t._v(" "),s("p",[t._v("在命令行中运行下面代码：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("export GOPATH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("davy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("golangbook"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("code\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" install chapter08"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("importadd\n$GOPATH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("importadd\n")])])]),s("p",[t._v("命令说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("第 1 行，根据你的 GOPATH 不同，设置 GOPATH。")]),t._v(" "),s("li",[t._v("第 2 行，使用 go install 指令编译并安装 chapter08/code8-1 到 GOPATH 的 bin 目录下。")]),t._v(" "),s("li",[t._v("第 3 行，执行 GOPATH 的 bin 目录下的可执行文件 code8-1。")])]),t._v(" "),s("p",[t._v("运行代码，输出结果如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("导入的包之间可以通过添加空行来分组；通常将来自不同组织的包独自分组。包的导入顺序无关紧要，但是在每个分组中一般会根据字符串顺序排列。（gofmt 和 goimports 工具都可以将不同分组导入的包独立排序。）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"html/template"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"os"')]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"golang.org/x/net/html"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"golang.org/x/net/ipv4"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"二、自定义引用的包名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、自定义引用的包名"}},[t._v("#")]),t._v(" 二、自定义引用的包名")]),t._v(" "),s("p",[t._v("如果我们想同时导入两个有着名字相同的包，例如 math/rand 包和 crypto/rand 包，那么导入声明必须至少为一个同名包指定一个新的包名以避免冲突。这叫做导入包的重命名。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crypto/rand"')]),t._v("\n  mrand "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"math/rand"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将名称替换为mrand避免冲突")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("导入包的重命名只影响当前的源文件。其它的源文件如果导入了相同的包，可以用导入包原本默认的名字或重命名为另一个完全不同的名字。")]),t._v(" "),s("p",[t._v('导入包重命名是一个有用的特性，它不仅仅只是为了解决名字冲突。如果导入的一个包名很笨重，特别是在一些自动生成的代码中，这时候用一个简短名称会更方便。选择用简短名称重命名导入包时候最好统一，以避免包名混乱。选择另一个包名称还可以帮助避免和本地普通变量名产生冲突。例如，如果文件中已经有了一个名为 path 的变量，那么我们可以将"path"标准包重命名为 pathpkg。')]),t._v(" "),s("p",[t._v("每个导入声明语句都明确指定了当前包和被导入包之间的依赖关系。如果遇到包循环导入的情况，Go 语言的构建工具将报告错误。")]),t._v(" "),s("h2",{attrs:{id:"三、匿名导入包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、匿名导入包"}},[t._v("#")]),t._v(" 三、匿名导入包")]),t._v(" "),s("p",[t._v("如果只希望导入包，而不使用任何包内的结构和类型，也不调用包内的任何函数时，可以使用匿名导入包，格式如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/package"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其中，path/to/package 表示要导入的包名，下画线"),s("code",[t._v("_")]),t._v("表示匿名导入包。")]),t._v(" "),s("p",[t._v("匿名导入的包与其他方式导入包一样会让导入包编译到可执行文件中，同时，导入包也会触发 init() 函数调用。")]),t._v(" "),s("h2",{attrs:{id:"四、init-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、init-函数"}},[t._v("#")]),t._v(" 四、init 函数")]),t._v(" "),s("p",[t._v("在某些需求的设计上需要在程序启动时统一调用程序引用到的所有包的初始化函数，如果需要通过开发者手动调用这些初始化函数，那么这个过程可能会发生错误或者遗漏。我们希望在被引用的包内部，由包的编写者获得代码启动的通知，在程序启动时做一些自己包内代码的初始化工作。")]),t._v(" "),s("p",[t._v("例如，为了提高数学库计算三角函数的执行效率，可以在程序启动时，将三角函数的值提前在内存中建成索引表，外部程序通过查表的方式迅速获得三角函数的值。但是三角函数索引表的初始化函数的调用不希望由每一个外部使用三角函数的开发者调用，如果在三角函数的包内有一个机制可以告诉三角函数包程序何时启动，那么就可以解决初始化的问题。")]),t._v(" "),s("p",[t._v("Go 语言为以上问题提供了一个非常方便的特性：init() 函数。")]),t._v(" "),s("p",[t._v("init() 函数的特性如下：")]),t._v(" "),s("ul",[s("li",[t._v("每个源码可以使用 1 个 init() 函数。")]),t._v(" "),s("li",[t._v("init() 函数会在程序执行前（main() 函数执行前）被自动调用。")]),t._v(" "),s("li",[t._v("调用顺序为 main() 中引用的包，以深度优先顺序初始化。")])]),t._v(" "),s("p",[t._v("例如，假设有这样的包引用关系：main→A→B→C，那么这些包的 init() 函数调用顺序为：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init → B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init → A"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init → main\n")])])]),s("p",[t._v("说明：")]),t._v(" "),s("ul",[s("li",[t._v("同一个包中的多个 init() 函数的调用顺序不可预期。")]),t._v(" "),s("li",[t._v("init() 函数不能被其他函数调用。")])]),t._v(" "),s("h3",{attrs:{id:"理解包导入后的-init-函数初始化顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解包导入后的-init-函数初始化顺序"}},[t._v("#")]),t._v(" 理解包导入后的 init()函数初始化顺序")]),t._v(" "),s("p",[t._v("Go 语言包会从 main 包开始检查其引用的所有包，每个包也可能包含其他的包。Go 编译器由此构建出一个树状的包引用关系，再根据引用顺序决定编译顺序，依次编译这些包的代码。")]),t._v(" "),s("p",[t._v("在运行时，被最后导入的包会最先初始化并调用 init() 函数。")]),t._v(" "),s("p",[t._v("通过下面的代码理解包的初始化顺序。")]),t._v(" "),s("p",[t._v("代码 8-3 　包导入初始化顺序入口（…/chapter08/pkginit/main.go）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chapter08/code8-2/pkg1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pkg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecPkg1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("代码说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("第 3 行，导入 pkg1 包。")]),t._v(" "),s("li",[t._v("第 7 行，调用 pkg1 包的 ExecPkg1() 函数。")])]),t._v(" "),s("p",[t._v("代码 8-4 　包导入初始化顺序 pkg1（…/chapter08/pkginit/pkg1/pkg1.go）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" pkg1\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chapter08/code8-2/pkg2"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecPkg1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ExecPkg1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pkg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecPkg2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkg1 init"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("代码说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("第 4 行，导入 pkg2 包。")]),t._v(" "),s("li",[t._v("第 8 行，声明 ExecPkg1() 函数。")]),t._v(" "),s("li",[t._v("第 12 行，调用 pkg2 包的 ExecPkg2() 函数。")]),t._v(" "),s("li",[t._v("第 15 行，在 pkg1 包初始化时，打印 pkg1 init。")])]),t._v(" "),s("p",[t._v("代码 8-5 　包导入初始化顺序 pkg2（…/chapter08/pkginit/pkg2/pkg2.go）")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" pkg2\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ExecPkg2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ExecPkg2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pkg2 init"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("代码说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("第 5 行，声明 ExecPkg2() 函数。")]),t._v(" "),s("li",[t._v("第 10 行，在 pkg2 包初始化时，打印 pkg2 init。")])]),t._v(" "),s("p",[t._v("执行代码，输出如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[t._v("pkg2 init\npkg1 init\nExecPkg1\nExecPkg2\n")])])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://c.biancheng.net/view/91.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Go 语言 import 导入包"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);